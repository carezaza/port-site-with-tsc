{"version":3,"sources":["Components/utilsComponents/LinkNoneStyle.tsx","Components/AuthButton.tsx","Container/HomePage.tsx"],"names":["LinkStyle","styled","Link","LinkNoneStyle","children","to","ButtonLogin","Button","ButtonIconWrapper","div","ButtonIcon","img","ButtonText","p","AuthButton","href","style","textDecoration","variant","src","HomeContainer","connector","connect","state","currentUser","userReducer","ports","portReducer","history","useHistory","useEffect","path","window","location","search","slice","find","handlePath","push","display","gridTemplateColumns","gridGap","margin","username","color","size","background","padding","borderRadius","textAlign","Autocomplete","options","getOptionLabel","option","width","onChange","event","values","renderInput","params","TextField","label","e","console","log","target","value"],"mappings":"kQAIA,IAAMA,EAAYC,YAAOC,IAAPD,CAAH,KAaAE,IAJO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,GACjC,OAAO,kBAACL,EAAD,CAAWK,GAAIA,GAAKD,K,+0BCV7B,IAAME,EAAcL,YAAOM,IAAPN,CAAH,KASXO,EAAoBP,IAAOQ,IAAV,KAYjBC,EAAaT,IAAOU,IAAV,KAKVC,EAAaX,IAAOY,EAAV,KAoBDC,EAdI,WACjB,OAEE,uBAAGC,KAAK,kDAAkDC,MAAO,CAAEC,eAAgB,SACjF,kBAACX,EAAD,CAAaY,QAAQ,aACnB,kBAACV,EAAD,KACE,kBAACE,EAAD,CAAYS,IAAI,4BAElB,kBAACP,EAAD,6B,8UClCR,IAAMQ,EAAgBnB,IAAOQ,IAAV,KA0EbY,EAAYC,aALM,SAACC,GAAD,MAAwB,CAC9CC,YAAaD,EAAME,YAAYD,YAC/BE,MAAOH,EAAMI,YAAYD,UASZL,aArEF,SAAC,GAAuD,IAArDG,EAAoD,EAApDA,YAAaE,EAAuC,EAAvCA,MACrBE,EAAUC,cAYhB,OAPAC,qBAAU,WACR,IAAMC,EAAOC,OAAOC,SAASC,OAAOC,MAAM,GACtCT,EAAMU,MAAK,SAACvB,GAAD,OAAOA,EAAEwB,aAAeN,MACrCH,EAAQU,KAAR,gBAAsBP,MAEvB,CAACL,IAGF,kBAACN,EAAD,KACE,yBACEJ,MAAO,CAAEuB,QAAS,OAAQC,oBAAqB,OAAQC,QAAS,KAE/DjB,EACC,yBAAKR,MAAO,CAAE0B,OAAQ,SACpB,kBAACvC,EAAA,EAAD,CAAeE,GAAE,gBAAWmB,EAAYmB,WACtC,kBAACpC,EAAA,EAAD,CAAQW,QAAQ,YAAY0B,MAAM,YAAYC,KAAK,SAAnD,mBAMJ,kBAAC,EAAD,MAEF,yBACE7B,MAAO,CACL8B,WAAY,wBACZC,QAAS,mBACTC,aAAc,IAGhB,wBAAIhC,MAAO,CAAEiC,UAAW,WAAxB,eACA,kBAACC,EAAA,EAAD,CACEC,QAASzB,EACT0B,eAAgB,SAACC,GAAD,OAAYA,EAAOhB,YACnCrB,MAAO,CAAEsC,MAAO,KAChBT,KAAK,QACLU,SAxCW,SAACC,EAAYC,GAChC7B,EAAQU,KAAR,gBAAsBmB,EAAOpB,cAwCrBqB,YAAa,SAACC,GAAD,OACX,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEEE,MAAM,sBACN3C,QAAQ,WACRqC,SAAU,SAACO,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,OAAOC","file":"static/js/5.fe24a90b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LinkStyle = styled(Link)`\r\n  color: inherit;\r\n  text-decoration: none;\r\n`;\r\n\r\ntype Props = {\r\n  to: string;\r\n  children: React.ReactNode;\r\n};\r\nconst LinkNoneStyle = ({ children, to }: Props) => {\r\n  return <LinkStyle to={to}>{children}</LinkStyle>;\r\n};\r\n\r\nexport default LinkNoneStyle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst ButtonLogin = styled(Button)`\r\n  display: flex !important;\r\n  justify-content: space-between !important;\r\n  padding: 0px 5px !important;\r\n  width: 220px;\r\n  background-color: #4285f4 !important;\r\n  margin:auto;\r\n`;\r\n\r\nconst ButtonIconWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 1px;\r\n  margin-left: 1px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 2px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst ButtonIcon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nconst ButtonText = styled.p`\r\n  color: #fff;\r\n  font-size: 14px;\r\n  letter-spacing: 0.2px;\r\n`;\r\n\r\nconst AuthButton = (): React.ReactElement => {\r\n  return (\r\n   \r\n    <a href=\"http://portfolio-care.herokuapp.com/auth/google\" style={{ textDecoration: \"none\" }}>\r\n      <ButtonLogin variant=\"contained\">\r\n        <ButtonIconWrapper>\r\n          <ButtonIcon src=\"/images/GoogleLogo.svg\" />\r\n        </ButtonIconWrapper>\r\n        <ButtonText>Login with Button</ButtonText>\r\n      </ButtonLogin>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default AuthButton;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport AuthButton from \"../Components/AuthButton\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LinkNoneStyle from \"../Components/utilsComponents/LinkNoneStyle\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst HomeContainer = styled.div`\r\n  min-height: 100vh;\r\n  height: 100%;\r\n  background-image: url(\"/images/BackgroundHex.jpg\");\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst Home = ({ currentUser, ports }: Props): React.ReactElement => {\r\n  const history = useHistory();\r\n  const handleChange = (event: any, values: any) => {\r\n    history.push(`/port/${values.handlePath}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const path = window.location.search.slice(1);\r\n    if (ports.find((p) => p.handlePath === path)) {\r\n      history.push(`/port/${path}`);\r\n    }\r\n  }, [ports]);\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <div\r\n        style={{ display: \"grid\", gridTemplateColumns: \"auto\", gridGap: 10 }}\r\n      >\r\n        {currentUser ? (\r\n          <div style={{ margin: \"auto\" }}>\r\n            <LinkNoneStyle to={`/port/${currentUser.username}`}>\r\n              <Button variant=\"contained\" color=\"secondary\" size=\"large\">\r\n                Go to my port\r\n              </Button>\r\n            </LinkNoneStyle>\r\n          </div>\r\n        ) : (\r\n          <AuthButton />\r\n        )}\r\n        <div\r\n          style={{\r\n            background: \"rgba(255,255,255,0.4)\",\r\n            padding: \"0 10px 20px 10px\",\r\n            borderRadius: 3,\r\n          }}\r\n        >\r\n          <h4 style={{ textAlign: \"center\" }}>Search Port</h4>\r\n          <Autocomplete\r\n            options={ports}\r\n            getOptionLabel={(option) => option.handlePath}\r\n            style={{ width: 250 }}\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Portfolio path name\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => console.log(e.target.value)}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n  ports: state.portReducer.ports,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(Home);\r\n"],"sourceRoot":""}