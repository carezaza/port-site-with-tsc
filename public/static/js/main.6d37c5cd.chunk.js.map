{"version":3,"sources":["generated/graphql.tsx","redux/User/user.reducer.ts","redux/alert/alert.reducer.ts","redux/Port/port.reducer.ts","redux/loading/loading.reducer.ts","redux/rootReducer.ts","redux/store.ts","portal/Spinner.tsx","Context/storeOffset.tsx","Components/FallBackSpinner.tsx","Components/LogoutButton.tsx","redux/User/user.action.ts","Components/AlertMessage.tsx","Components/ErrorBoundary.tsx","Components/AuthButton.tsx","Components/utilsComponents/LinkNoneStyle.tsx","Container/HomePage.tsx","Components/portComponents/Navbar.tsx","Components/portComponents/Landing.tsx","utils/useWindowSize.ts","Components/portComponents/ProjectItem.tsx","Components/portComponents/Projects.tsx","redux/alert/alert.action.ts","Components/portComponents/About.tsx","Components/portComponents/Resume.tsx","utils/validURL.ts","Components/portComponents/Portfolio.tsx","portal/Modal.tsx","Components/editComponents/EditLandingForm.tsx","Container/EditLanding.tsx","Components/editComponents/EditWorkForm.tsx","Container/EditWork.tsx","Container/DeleteWork.tsx","Container/PortfolioPage.tsx","redux/Port/port.action.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["DeleteWorkDocument","gql","EditAboutDocument","EditLandingDocument","EditResumeDocument","EditWorkDocument","LogOutDocument","MeDocument","WhoPortDocument","INITIAL_STATE","currentUser","alerts","currentPort","isLoading","combineReducers","userReducer","state","action","type","payload","alertReducer","filter","alert","id","portReducer","loadReducer","middleWares","reduxThunk","store","createStore","rootReducer","applyMiddleware","useStyles","makeStyles","theme","createStyles","root","display","marginLeft","spacing","width","height","justifyContent","backgroundColor","alignItems","minHeight","position","top","left","zIndex","Container","document","createElement","SpinnerRoot","querySelector","Spinner","classes","React","useEffect","appendChild","removeChild","ReactDOM","createPortal","className","CircularProgress","color","OffSetContext","createContext","OffSetContextProvider","children","useState","landing","project","about","resume","offset","setOffSet","Provider","value","FallBackSpinner","button","margin","bottom","right","transition","connector","connect","SetUser","user","baseOptions","ApolloReactHooks","logOut","loading","handleLogout","a","Button","onClick","variant","startIcon","AlertContainer","styled","div","AlertBox","Alert","minWidth","maxWidth","length","map","key","severity","AlertTitle","style","textTransform","message","ErrorBoundary","redirect","hasError","error","info","console","this","setTimeout","setState","to","placeItems","textDecoration","props","Component","ButtonLogin","ButtonIconWrapper","ButtonIcon","img","ButtonText","p","AuthButton","href","process","CLIENT_URL","src","LinkStyle","Link","LinkNoneStyle","HomeContainer","username","size","flexGrow","maxHeight","homeButton","marginRight","menus","menuButton","breakpoints","down","menuIconButton","title","NavBarForMobile","showNav","Navbar","setShowNav","AppBar","Toolbar","IconButton","edge","aria-label","window","scrollTo","behavior","List","component","ListItem","ListItemText","primary","avatar","border","name","fontSize","email","contact","marginTop","background","LandingCard","ItemDiv","SocialDiv","SocialButton","Landing","port","allowEdit","url","useRouteMatch","setOffset","ref","useRef","windowWidth","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","current","offsetLeft","Fragment","Avatar","Typography","align","firstName","lastName","nickName","social","gitHup","target","rel","disabled","linkedIn","twitter","faceBook","tel","media","padding","flexDirection","ProjectItem","work","Card","CardMedia","image","previewImage","textAlign","CardActions","viewDemo","viewGitHup","CardContent","wordBreak","gutterBottom","description","skillsUsed","borderRadius","s","i","ProjectDiv","Projects","works","marginBottom","w","CardActionArea","SetAlert","dispatch","uuidv4","RemoveAlert","AboutDiv","InputEditAbout","TextField","_","ownProps","edit","setEdit","aboutMe","setAboutMe","editAbout","handleEdit","variables","data","multiline","rowsMax","label","defaultValue","onChange","e","ResumeDiv","ResumeFrame","iframe","InputEditResume","myResume","setMyResume","setError","editResume","str","RegExp","test","useContext","setAllowEdit","userId","split","LandingRef","ProjectRef","AboutRef","ResumeRef","offsetTop","Container1","ModalRoot","OutSide","ModalBody","Modal","onDismiss","content","actions","stopPropagation","LandingSchema","yup","shape","handlePath","trim","required","min","max","fitsName","EditLandingForm","onSubmit","useForm","resolver","yupResolver","handleSubmit","register","errors","inputRef","autoComplete","history","useHistory","editLanding","values","push","substring","SkillUsedContainer","SkillUsedDiv","WorkSchema","find","workId","back","skills","setSkills","errSkill","setErrSkill","skill","setSkill","addSkill","setAddSkill","editWork","index","newSkills","useParams","toLowerCase","deleteWork","handleDelete","PortContainer","loader","SetPort","whoPort","path","Portfolio","exact","EditLanding","EditWork","DeleteWork","App","me","HomePage","PortfolioPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","client","ApolloClient","link","createHttpLink","uri","credentials","cache","InMemoryCache","render","URL","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6d37c5cd.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\nimport * as ApolloReactCommon from '@apollo/react-common';\r\nimport * as ApolloReactHooks from '@apollo/react-hooks';\r\nexport type Maybe<T> = T | null;\r\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n  ID: string;\r\n  String: string;\r\n  Boolean: boolean;\r\n  Int: number;\r\n  Float: number;\r\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\r\n  DateTime: any;\r\n};\r\n\r\nexport type Query = {\r\n  __typename?: 'Query';\r\n  me: User;\r\n  hello: Scalars['String'];\r\n  users: Array<Maybe<User>>;\r\n  whoPort?: Maybe<Portfolio>;\r\n};\r\n\r\n\r\nexport type QueryWhoPortArgs = {\r\n  handlePath: Scalars['String'];\r\n};\r\n\r\n/** User model */\r\nexport type User = {\r\n  __typename?: 'User';\r\n  id: Scalars['ID'];\r\n  username: Scalars['String'];\r\n  email: Scalars['String'];\r\n  createdAt: Scalars['DateTime'];\r\n};\r\n\r\n\r\n/** Portfolio model */\r\nexport type Portfolio = {\r\n  __typename?: 'Portfolio';\r\n  id: Scalars['ID'];\r\n  handlePath: Scalars['String'];\r\n  avatar: Scalars['String'];\r\n  resume: Scalars['String'];\r\n  background: Scalars['String'];\r\n  name: Name;\r\n  social: Social;\r\n  works: Array<Works>;\r\n  contact: Contact;\r\n  about: Scalars['String'];\r\n  createdAt: Scalars['DateTime'];\r\n};\r\n\r\nexport type Name = {\r\n  __typename?: 'Name';\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  nickName: Scalars['String'];\r\n};\r\n\r\nexport type Social = {\r\n  __typename?: 'Social';\r\n  gitHup: Scalars['String'];\r\n  faceBook: Scalars['String'];\r\n  linkedIn: Scalars['String'];\r\n  twitter: Scalars['String'];\r\n};\r\n\r\nexport type Works = {\r\n  __typename?: 'Works';\r\n  id: Scalars['ID'];\r\n  name: Scalars['String'];\r\n  previewImage: Scalars['String'];\r\n  description: Scalars['String'];\r\n  viewDemo: Scalars['String'];\r\n  viewGitHup: Scalars['String'];\r\n  skillsUsed: Array<Scalars['String']>;\r\n};\r\n\r\nexport type Contact = {\r\n  __typename?: 'Contact';\r\n  email: Scalars['String'];\r\n  tel: Scalars['String'];\r\n};\r\n\r\nexport type Mutation = {\r\n  __typename?: 'Mutation';\r\n  logOut: Scalars['String'];\r\n  editLanding?: Maybe<Portfolio>;\r\n  editAbout?: Maybe<Portfolio>;\r\n  editResume: Portfolio;\r\n  editWork: Portfolio;\r\n  deleteWork: Portfolio;\r\n};\r\n\r\n\r\nexport type MutationEditLandingArgs = {\r\n  data: LandingInput;\r\n};\r\n\r\n\r\nexport type MutationEditAboutArgs = {\r\n  about: Scalars['String'];\r\n};\r\n\r\n\r\nexport type MutationEditResumeArgs = {\r\n  resume: Scalars['String'];\r\n};\r\n\r\n\r\nexport type MutationEditWorkArgs = {\r\n  work: WorkInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteWorkArgs = {\r\n  workId: Scalars['String'];\r\n};\r\n\r\nexport type LandingInput = {\r\n  handlePath: Scalars['String'];\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  nickName: Scalars['String'];\r\n  avatar: Scalars['String'];\r\n  background: Scalars['String'];\r\n  linkedIn: Scalars['String'];\r\n  gitHup: Scalars['String'];\r\n  faceBook: Scalars['String'];\r\n  twitter: Scalars['String'];\r\n  email: Scalars['String'];\r\n  tel: Scalars['String'];\r\n};\r\n\r\nexport type WorkInput = {\r\n  id: Scalars['String'];\r\n  name: Scalars['String'];\r\n  previewImage: Scalars['String'];\r\n  description: Scalars['String'];\r\n  viewDemo: Scalars['String'];\r\n  viewGitHup: Scalars['String'];\r\n  skillsUsed: Array<Scalars['String']>;\r\n};\r\n\r\nexport type DeleteWorkMutationVariables = Exact<{\r\n  workId: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type DeleteWorkMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { deleteWork: (\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type EditAboutMutationVariables = Exact<{\r\n  about: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type EditAboutMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { editAbout?: Maybe<(\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\nexport type EditLandingMutationVariables = Exact<{\r\n  data: LandingInput;\r\n}>;\r\n\r\n\r\nexport type EditLandingMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { editLanding?: Maybe<(\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\nexport type EditResumeMutationVariables = Exact<{\r\n  resume: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type EditResumeMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { editResume: (\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type EditWorkMutationVariables = Exact<{\r\n  work: WorkInput;\r\n}>;\r\n\r\n\r\nexport type EditWorkMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { editWork: (\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type HelloQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type HelloQuery = (\r\n  { __typename?: 'Query' }\r\n  & Pick<Query, 'hello'>\r\n);\r\n\r\nexport type LogOutMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type LogOutMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & Pick<Mutation, 'logOut'>\r\n);\r\n\r\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type MeQuery = (\r\n  { __typename?: 'Query' }\r\n  & { me: (\r\n    { __typename?: 'User' }\r\n    & Pick<User, 'id' | 'email' | 'username' | 'createdAt'>\r\n  ) }\r\n);\r\n\r\nexport type WhoPortQueryVariables = Exact<{\r\n  handlePath: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type WhoPortQuery = (\r\n  { __typename?: 'Query' }\r\n  & { whoPort?: Maybe<(\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\n\r\nexport const DeleteWorkDocument = gql`\r\n    mutation deleteWork($workId: String!) {\r\n  deleteWork(workId: $workId) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type DeleteWorkMutationFn = ApolloReactCommon.MutationFunction<DeleteWorkMutation, DeleteWorkMutationVariables>;\r\n\r\n/**\r\n * __useDeleteWorkMutation__\r\n *\r\n * To run a mutation, you first call `useDeleteWorkMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useDeleteWorkMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [deleteWorkMutation, { data, loading, error }] = useDeleteWorkMutation({\r\n *   variables: {\r\n *      workId: // value for 'workId'\r\n *   },\r\n * });\r\n */\r\nexport function useDeleteWorkMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<DeleteWorkMutation, DeleteWorkMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<DeleteWorkMutation, DeleteWorkMutationVariables>(DeleteWorkDocument, baseOptions);\r\n      }\r\nexport type DeleteWorkMutationHookResult = ReturnType<typeof useDeleteWorkMutation>;\r\nexport type DeleteWorkMutationResult = ApolloReactCommon.MutationResult<DeleteWorkMutation>;\r\nexport type DeleteWorkMutationOptions = ApolloReactCommon.BaseMutationOptions<DeleteWorkMutation, DeleteWorkMutationVariables>;\r\nexport const EditAboutDocument = gql`\r\n    mutation editAbout($about: String!) {\r\n  editAbout(about: $about) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type EditAboutMutationFn = ApolloReactCommon.MutationFunction<EditAboutMutation, EditAboutMutationVariables>;\r\n\r\n/**\r\n * __useEditAboutMutation__\r\n *\r\n * To run a mutation, you first call `useEditAboutMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useEditAboutMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [editAboutMutation, { data, loading, error }] = useEditAboutMutation({\r\n *   variables: {\r\n *      about: // value for 'about'\r\n *   },\r\n * });\r\n */\r\nexport function useEditAboutMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditAboutMutation, EditAboutMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<EditAboutMutation, EditAboutMutationVariables>(EditAboutDocument, baseOptions);\r\n      }\r\nexport type EditAboutMutationHookResult = ReturnType<typeof useEditAboutMutation>;\r\nexport type EditAboutMutationResult = ApolloReactCommon.MutationResult<EditAboutMutation>;\r\nexport type EditAboutMutationOptions = ApolloReactCommon.BaseMutationOptions<EditAboutMutation, EditAboutMutationVariables>;\r\nexport const EditLandingDocument = gql`\r\n    mutation editLanding($data: LandingInput!) {\r\n  editLanding(data: $data) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type EditLandingMutationFn = ApolloReactCommon.MutationFunction<EditLandingMutation, EditLandingMutationVariables>;\r\n\r\n/**\r\n * __useEditLandingMutation__\r\n *\r\n * To run a mutation, you first call `useEditLandingMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useEditLandingMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [editLandingMutation, { data, loading, error }] = useEditLandingMutation({\r\n *   variables: {\r\n *      data: // value for 'data'\r\n *   },\r\n * });\r\n */\r\nexport function useEditLandingMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditLandingMutation, EditLandingMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<EditLandingMutation, EditLandingMutationVariables>(EditLandingDocument, baseOptions);\r\n      }\r\nexport type EditLandingMutationHookResult = ReturnType<typeof useEditLandingMutation>;\r\nexport type EditLandingMutationResult = ApolloReactCommon.MutationResult<EditLandingMutation>;\r\nexport type EditLandingMutationOptions = ApolloReactCommon.BaseMutationOptions<EditLandingMutation, EditLandingMutationVariables>;\r\nexport const EditResumeDocument = gql`\r\n    mutation editResume($resume: String!) {\r\n  editResume(resume: $resume) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type EditResumeMutationFn = ApolloReactCommon.MutationFunction<EditResumeMutation, EditResumeMutationVariables>;\r\n\r\n/**\r\n * __useEditResumeMutation__\r\n *\r\n * To run a mutation, you first call `useEditResumeMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useEditResumeMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [editResumeMutation, { data, loading, error }] = useEditResumeMutation({\r\n *   variables: {\r\n *      resume: // value for 'resume'\r\n *   },\r\n * });\r\n */\r\nexport function useEditResumeMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditResumeMutation, EditResumeMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<EditResumeMutation, EditResumeMutationVariables>(EditResumeDocument, baseOptions);\r\n      }\r\nexport type EditResumeMutationHookResult = ReturnType<typeof useEditResumeMutation>;\r\nexport type EditResumeMutationResult = ApolloReactCommon.MutationResult<EditResumeMutation>;\r\nexport type EditResumeMutationOptions = ApolloReactCommon.BaseMutationOptions<EditResumeMutation, EditResumeMutationVariables>;\r\nexport const EditWorkDocument = gql`\r\n    mutation editWork($work: WorkInput!) {\r\n  editWork(work: $work) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type EditWorkMutationFn = ApolloReactCommon.MutationFunction<EditWorkMutation, EditWorkMutationVariables>;\r\n\r\n/**\r\n * __useEditWorkMutation__\r\n *\r\n * To run a mutation, you first call `useEditWorkMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useEditWorkMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [editWorkMutation, { data, loading, error }] = useEditWorkMutation({\r\n *   variables: {\r\n *      work: // value for 'work'\r\n *   },\r\n * });\r\n */\r\nexport function useEditWorkMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditWorkMutation, EditWorkMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<EditWorkMutation, EditWorkMutationVariables>(EditWorkDocument, baseOptions);\r\n      }\r\nexport type EditWorkMutationHookResult = ReturnType<typeof useEditWorkMutation>;\r\nexport type EditWorkMutationResult = ApolloReactCommon.MutationResult<EditWorkMutation>;\r\nexport type EditWorkMutationOptions = ApolloReactCommon.BaseMutationOptions<EditWorkMutation, EditWorkMutationVariables>;\r\nexport const HelloDocument = gql`\r\n    query hello {\r\n  hello\r\n}\r\n    `;\r\n\r\n/**\r\n * __useHelloQuery__\r\n *\r\n * To run a query within a React component, call `useHelloQuery` and pass it any options that fit your needs.\r\n * When your component renders, `useHelloQuery` returns an object from Apollo Client that contains loading, error, and data properties\r\n * you can use to render your UI.\r\n *\r\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\r\n *\r\n * @example\r\n * const { data, loading, error } = useHelloQuery({\r\n *   variables: {\r\n *   },\r\n * });\r\n */\r\nexport function useHelloQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<HelloQuery, HelloQueryVariables>) {\r\n        return ApolloReactHooks.useQuery<HelloQuery, HelloQueryVariables>(HelloDocument, baseOptions);\r\n      }\r\nexport function useHelloLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<HelloQuery, HelloQueryVariables>) {\r\n          return ApolloReactHooks.useLazyQuery<HelloQuery, HelloQueryVariables>(HelloDocument, baseOptions);\r\n        }\r\nexport type HelloQueryHookResult = ReturnType<typeof useHelloQuery>;\r\nexport type HelloLazyQueryHookResult = ReturnType<typeof useHelloLazyQuery>;\r\nexport type HelloQueryResult = ApolloReactCommon.QueryResult<HelloQuery, HelloQueryVariables>;\r\nexport const LogOutDocument = gql`\r\n    mutation logOut {\r\n  logOut\r\n}\r\n    `;\r\nexport type LogOutMutationFn = ApolloReactCommon.MutationFunction<LogOutMutation, LogOutMutationVariables>;\r\n\r\n/**\r\n * __useLogOutMutation__\r\n *\r\n * To run a mutation, you first call `useLogOutMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useLogOutMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [logOutMutation, { data, loading, error }] = useLogOutMutation({\r\n *   variables: {\r\n *   },\r\n * });\r\n */\r\nexport function useLogOutMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LogOutMutation, LogOutMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<LogOutMutation, LogOutMutationVariables>(LogOutDocument, baseOptions);\r\n      }\r\nexport type LogOutMutationHookResult = ReturnType<typeof useLogOutMutation>;\r\nexport type LogOutMutationResult = ApolloReactCommon.MutationResult<LogOutMutation>;\r\nexport type LogOutMutationOptions = ApolloReactCommon.BaseMutationOptions<LogOutMutation, LogOutMutationVariables>;\r\nexport const MeDocument = gql`\r\n    query me {\r\n  me {\r\n    id\r\n    email\r\n    username\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\n\r\n/**\r\n * __useMeQuery__\r\n *\r\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\r\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties\r\n * you can use to render your UI.\r\n *\r\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\r\n *\r\n * @example\r\n * const { data, loading, error } = useMeQuery({\r\n *   variables: {\r\n *   },\r\n * });\r\n */\r\nexport function useMeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>) {\r\n        return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\r\n      }\r\nexport function useMeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\r\n          return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\r\n        }\r\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\r\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\r\nexport type MeQueryResult = ApolloReactCommon.QueryResult<MeQuery, MeQueryVariables>;\r\nexport const WhoPortDocument = gql`\r\n    query whoPort($handlePath: String!) {\r\n  whoPort(handlePath: $handlePath) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\n\r\n/**\r\n * __useWhoPortQuery__\r\n *\r\n * To run a query within a React component, call `useWhoPortQuery` and pass it any options that fit your needs.\r\n * When your component renders, `useWhoPortQuery` returns an object from Apollo Client that contains loading, error, and data properties\r\n * you can use to render your UI.\r\n *\r\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\r\n *\r\n * @example\r\n * const { data, loading, error } = useWhoPortQuery({\r\n *   variables: {\r\n *      handlePath: // value for 'handlePath'\r\n *   },\r\n * });\r\n */\r\nexport function useWhoPortQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<WhoPortQuery, WhoPortQueryVariables>) {\r\n        return ApolloReactHooks.useQuery<WhoPortQuery, WhoPortQueryVariables>(WhoPortDocument, baseOptions);\r\n      }\r\nexport function useWhoPortLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<WhoPortQuery, WhoPortQueryVariables>) {\r\n          return ApolloReactHooks.useLazyQuery<WhoPortQuery, WhoPortQueryVariables>(WhoPortDocument, baseOptions);\r\n        }\r\nexport type WhoPortQueryHookResult = ReturnType<typeof useWhoPortQuery>;\r\nexport type WhoPortLazyQueryHookResult = ReturnType<typeof useWhoPortLazyQuery>;\r\nexport type WhoPortQueryResult = ApolloReactCommon.QueryResult<WhoPortQuery, WhoPortQueryVariables>;","import { UserTypes, currentUser } from \"./user.interface\";\r\n\r\nexport interface UserState {\r\n  currentUser: currentUser | null;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n};\r\n\r\nexport default function (\r\n  state: UserState = INITIAL_STATE,\r\n  action: UserTypes\r\n): UserState {\r\n  switch (action.type) {\r\n    case \"SetUser\":\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { AlertTypes, alert } from \"./alert.interface\";\r\n\r\nexport interface AlertState {\r\n  alerts: Array<alert>;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  alerts: [],\r\n};\r\n\r\nexport default function (\r\n  state: AlertState = INITIAL_STATE,\r\n  action: AlertTypes\r\n): AlertState {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"SetAlert\":\r\n      return {\r\n        ...state,\r\n        alerts: [...state.alerts, payload],\r\n      };\r\n    case \"RemoveAlert\":\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter((alert) => alert.id !== payload.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { PortTypes, currentPort } from \"./port.interface\";\r\n\r\nexport interface PortState {\r\n  currentPort: currentPort | null;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  currentPort: null,\r\n};\r\n\r\nexport default function (\r\n  state: PortState = INITIAL_STATE,\r\n  action: PortTypes\r\n): PortState {\r\n  switch (action.type) {\r\n    case \"SetPort\":\r\n      return {\r\n        ...state,\r\n        currentPort: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export interface LoadState {\r\n  isLoading: Boolean;\r\n}\r\n\r\ninterface LoaderTypes {\r\n  type: string;\r\n  payload: Boolean;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  isLoading: false,\r\n};\r\n\r\nexport default function (\r\n  state: LoadState = INITIAL_STATE,\r\n  action: LoaderTypes\r\n): LoadState {\r\n  switch (action.type) {\r\n    case \"SetLoading\":\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer, { UserState } from \"./User/user.reducer\";\r\nimport alertReducer, { AlertState } from \"./alert/alert.reducer\";\r\nimport portReducer, { PortState } from \"./Port/port.reducer\";\r\nimport loadReducer, { LoadState } from \"./loading/loading.reducer\";\r\n\r\nexport type MyReducers = {\r\n  userReducer: UserState;\r\n  alertReducer: AlertState;\r\n  portReducer: PortState;\r\n  loadReducer: LoadState;\r\n};\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n  alertReducer,\r\n  portReducer,\r\n  loadReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middleWares: Array<any> = [reduxThunk];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > * + *\": {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      backgroundColor: \"rgba(0,0,0,0.9)\",\r\n      alignItems: \"center\",\r\n      minHeight: \"100vh\",\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 9999,\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  isLoading: Boolean;\r\n};\r\n\r\nconst Container = document.createElement(\"div\");\r\nconst SpinnerRoot = document.querySelector(\"#spinner\");\r\n\r\nexport default function Spinner({\r\n  isLoading,\r\n}: Props): React.ReactElement | null {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    SpinnerRoot?.appendChild(Container);\r\n    return () => {\r\n      SpinnerRoot?.removeChild(Container);\r\n    };\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return ReactDOM.createPortal(\r\n      <div className={classes.root}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>,\r\n      Container\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  ReactNode,\r\n  SetStateAction,\r\n  Dispatch,\r\n} from \"react\";\r\n\r\ntype MyProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport type MyOffSet = {\r\n  landing: number | undefined;\r\n  project: number | undefined;\r\n  about: number | undefined;\r\n\r\n  resume: number | undefined;\r\n};\r\n\r\nexport type MyStoreOffset = {\r\n  offset: MyOffSet;\r\n  setOffSet: Dispatch<SetStateAction<MyOffSet>>;\r\n};\r\n\r\nexport const OffSetContext = createContext<MyStoreOffset | {}>({});\r\n\r\nexport const OffSetContextProvider = ({\r\n  children,\r\n}: MyProps): React.ReactElement => {\r\n  const [offset, setOffSet] = useState({\r\n    landing: 0,\r\n    project: 0,\r\n    about: 0,\r\n    resume: 0,\r\n  });\r\n\r\n  const store = {\r\n    offset,\r\n    setOffSet,\r\n  };\r\n\r\n  return (\r\n    <OffSetContext.Provider value={store}>{children}</OffSetContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > * + *\": {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      backgroundColor: \"rgba(0,0,0,0.9)\",\r\n      alignItems: \"center\",\r\n      minHeight: \"100vh\",\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 9999,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function FallBackSpinner() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { Button } from \"@material-ui/core/\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useLogOutMutation } from \"../generated/graphql\";\r\nimport { SetUser } from \"../redux/User/user.action\";\r\nimport FallBackSpinner from \"./FallBackSpinner\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      position: \"fixed\",\r\n      bottom: 0,\r\n      right: 0,\r\n      transition: \"all .5s ease-out\",\r\n    },\r\n  })\r\n);\r\nconst LogoutButton = ({\r\n  currentUser,\r\n  SetUser,\r\n}: Props): React.ReactElement | null => {\r\n  const classes = useStyles();\r\n  const [logOut, { loading }] = useLogOutMutation();\r\n\r\n  const handleLogout = async () => {\r\n    await logOut();\r\n    SetUser(null);\r\n  };\r\n\r\n  if (!currentUser) return null;\r\n  if (loading) return <FallBackSpinner />;\r\n  return (\r\n    <Button\r\n      onClick={handleLogout}\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      className={classes.button}\r\n      startIcon={<ExitToAppIcon />}\r\n    >\r\n      LogOut\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, { SetUser });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(LogoutButton);\r\n","import { currentUser, UserTypes } from \"./user.interface\";\r\n\r\nexport const SetUser = (user: currentUser | null): UserTypes => ({\r\n  type: \"SetUser\",\r\n  payload: user,\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from \"styled-components\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\n\r\nconst AlertContainer = styled.div`\r\n  position: fixed;\r\n  top: 70px;\r\n  right: 10px;\r\n  z-index: 99999999;\r\n`;\r\n\r\nconst AlertBox = styled(Alert)`\r\n  animation: slide 0.5s ease;\r\n  @keyframes slide {\r\n    from {\r\n      transform: translateY(200%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  alert: {\r\n    margin: 10,\r\n    minWidth: 280,\r\n    backgroundColor: \"white\",\r\n    maxWidth: 280,\r\n  },\r\n}));\r\n\r\nconst AlertMessage = ({ alerts }: Props) => {\r\n  const classes = useStyles();\r\n  if (alerts.length < 1) return null;\r\n  return (\r\n    <AlertContainer>\r\n      {alerts.map((alert) => (\r\n        <AlertBox\r\n          key={alert.id}\r\n          variant=\"outlined\"\r\n          severity={alert.type}\r\n          className={classes.alert}\r\n        >\r\n          <AlertTitle style={{ textTransform: \"capitalize\" }}>\r\n            {alert.type}\r\n          </AlertTitle>\r\n          <strong>{alert.message}</strong>\r\n        </AlertBox>\r\n      ))}\r\n    </AlertContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  alerts: state.alertReducer.alerts,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(AlertMessage);\r\n","import React, { Component, ErrorInfo } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  // deletes the constructor...\r\n  //constructor(props) {\r\n  // super(props);\r\n  // this.state = { hasError: false, redirect: false };\r\n  // }\r\n\r\n  public state = {\r\n    redirect: \"\",\r\n    hasError: false,\r\n  };\r\n  public static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n  // set the types for error  and info\r\n  public componentDidCatch(error: Error, info: ErrorInfo) {\r\n    console.error(\"ErrorBoundary caught an error\", error, info);\r\n  }\r\n  public componentDidUpdate() {\r\n    if (this.state.hasError) {\r\n      setTimeout(() => this.setState({ redirect: true }), 5000);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            minHeight: \"100vh\",\r\n            display: \"grid\",\r\n            placeItems: \"center\",\r\n          }}\r\n        >\r\n          <h3>\r\n            404 Page not found.{\" \"}\r\n            <Link to=\"/\" style={{ color: \"#f50057\", textDecoration: \"none\" }}>\r\n              Back home\r\n            </Link>\r\n          </h3>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst ButtonLogin = styled(Button)`\r\n  display: flex !important;\r\n  justify-content: space-between !important;\r\n  padding: 0px 5px !important;\r\n  width: 220px;\r\n  background-color: #4285f4 !important;\r\n`;\r\n\r\nconst ButtonIconWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 1px;\r\n  margin-left: 1px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 2px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst ButtonIcon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nconst ButtonText = styled.p`\r\n  color: #fff;\r\n  font-size: 14px;\r\n  letter-spacing: 0.2px;\r\n`;\r\n\r\nconst AuthButton = (): React.ReactElement => {\r\n  return (\r\n    <a\r\n      href={`${process.env.CLIENT_URL}/auth/google`}\r\n      style={{ textDecoration: \"none\" }}\r\n    >\r\n      <ButtonLogin variant=\"contained\">\r\n        <ButtonIconWrapper>\r\n          <ButtonIcon src=\"/images/GoogleLogo.svg\" />\r\n        </ButtonIconWrapper>\r\n        <ButtonText>Login with Button</ButtonText>\r\n      </ButtonLogin>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LinkStyle = styled(Link)`\r\n  color: inherit;\r\n  text-decoration: none;\r\n`;\r\n\r\ntype Props = {\r\n  to: string;\r\n  children: React.ReactNode;\r\n};\r\nconst LinkNoneStyle = ({ children, to }: Props) => {\r\n  return <LinkStyle to={to}>{children}</LinkStyle>;\r\n};\r\n\r\nexport default LinkNoneStyle;\r\n","import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport AuthButton from \"../Components/AuthButton\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport LinkNoneStyle from \"../Components/utilsComponents/LinkNoneStyle\";\r\n\r\nconst HomeContainer = styled.div`\r\n  min-height: 100vh;\r\n  height: 100%;\r\n  background-image: url(\"/images/BackgroundHex.jpg\");\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst Home = ({ currentUser }: Props): React.ReactElement => {\r\n  return (\r\n    <HomeContainer>\r\n      {currentUser ? (\r\n        <LinkNoneStyle to={`/portfolio/${currentUser.username}`}>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"large\">\r\n            Go to my port\r\n          </Button>\r\n        </LinkNoneStyle>\r\n      ) : (\r\n        <AuthButton />\r\n      )}\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(Home);\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Button, IconButton } from \"@material-ui/core/\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport LinkNoneStyle from \"../utilsComponents/LinkNoneStyle\";\r\nimport { MyOffSet } from \"../../Context/storeOffset\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core/\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      height: \"60px !important\",\r\n      maxHeight: \"60px !important\",\r\n    },\r\n    homeButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    menus: {\r\n      marginLeft: \"auto\",\r\n    },\r\n    menuButton: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n      fontSize: 16,\r\n      margin: \"0 5px\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"rgba(0,0,0,0.3)\",\r\n      },\r\n    },\r\n    menuIconButton: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"block\",\r\n      },\r\n      display: \"none\",\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nconst NavBarForMobile = styled.div`\r\n  position: fixed;\r\n  display: none;\r\n  top: 60px;\r\n  right: 0;\r\n  width: 40%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px;\r\n  transition: all 1s ease-out;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    display: block;\r\n    right: ${({ showNav }: styleProps) => (showNav ? \"0\" : \"-400px\")};\r\n  }\r\n`;\r\n\r\ntype styleProps = {\r\n  showNav: Boolean;\r\n};\r\n\r\ntype MyProps = {\r\n  offset: MyOffSet;\r\n};\r\n\r\nconst Navbar = ({ offset }: MyProps) => {\r\n  const classes = useStyles();\r\n  const [showNav, setShowNav] = React.useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"transparent\" className={classes.root}>\r\n      <Toolbar>\r\n        <LinkNoneStyle to=\"/\">\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.homeButton}\r\n            color=\"inherit\"\r\n            aria-label=\"home\"\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n        </LinkNoneStyle>\r\n\r\n        <div className={classes.menus}>\r\n          <Button\r\n            className={classes.menuButton}\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.landing, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            Home\r\n          </Button>\r\n          <Button\r\n            className={classes.menuButton}\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.project, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            My Projects\r\n          </Button>\r\n          <Button\r\n            className={classes.menuButton}\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.about, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            About\r\n          </Button>\r\n          <Button\r\n            className={classes.menuButton}\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.resume, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            Resume\r\n          </Button>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.menuIconButton}\r\n            onClick={() => setShowNav(!showNav)}\r\n          >\r\n            {showNav ? <CloseIcon /> : <MenuIcon />}\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n      <NavBarForMobile showNav={showNav}>\r\n        <List component=\"nav\" style={{ color: \"#fff\" }}>\r\n          <ListItem\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.landing, behavior: \"smooth\" })\r\n            }\r\n            button\r\n          >\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n          <ListItem\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.project, behavior: \"smooth\" })\r\n            }\r\n            button\r\n          >\r\n            <ListItemText primary=\"Projects\" />\r\n          </ListItem>\r\n          <ListItem\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.about, behavior: \"smooth\" })\r\n            }\r\n            button\r\n          >\r\n            <ListItemText primary=\"About\" />\r\n          </ListItem>\r\n          <ListItem\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.resume, behavior: \"smooth\" })\r\n            }\r\n            button\r\n          >\r\n            <ListItemText primary=\"Resume\" />\r\n          </ListItem>\r\n        </List>\r\n      </NavBarForMobile>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Avatar, Typography, IconButton } from \"@material-ui/core/\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useWindowSize } from \"../../utils/useWindowSize\";\r\nimport LinkNoneStyle from \"../utilsComponents/LinkNoneStyle\";\r\nimport { Portfolio } from \"src/generated/graphql\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    avatar: {\r\n      width: theme.spacing(15),\r\n      height: theme.spacing(15),\r\n      border: \"2px solid white\",\r\n    },\r\n    name: {\r\n      margin: theme.spacing(2),\r\n      fontSize: 20,\r\n    },\r\n    email: { margin: theme.spacing(2), fontSize: 16 },\r\n    contact: { marginTop: theme.spacing(0), fontSize: 16 },\r\n  })\r\n);\r\n\r\ntype bgProps = {\r\n  background: string;\r\n};\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  padding: 60px 0 40px 0;\r\n  background: #ccc;\r\n  background-image: ${({ background }: bgProps) =>\r\n    background ? `url(${background})` : `url(\"/images/BackgroundHex.jpg\")`};\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  outline: none;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nconst LandingCard = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto;\r\n  padding: 40px 0;\r\n  grid-gap: 5px;\r\n  margin: 40px auto 0 auto;\r\n  width: 100%;\r\n  max-width: 650px;\r\n  border-radius: 3px;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nconst ItemDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SocialDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  animation: falling 0.9s ease-out;\r\n\r\n  @keyframes falling {\r\n    0% {\r\n      transform: translateY(-1000px) rotate(-150deg);\r\n    }\r\n    80% {\r\n      transform: translateY(30px);\r\n    }\r\n    90% {\r\n      transform: translateY(-10px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SocialButton = styled(IconButton)`\r\n  margin: 0 10px !important;\r\n  background-color: rgba(0, 0, 0, 0.7) !important;\r\n\r\n  &:disabled {\r\n    background-color: grey;\r\n  }\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    animation: spin 0.4s ease-out;\r\n    @keyframes spin {\r\n      from {\r\n        transform: rotate(-360deg) scale(0.97);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype Props = {\r\n  port: Portfolio;\r\n  allowEdit: Boolean;\r\n};\r\nconst Landing = ({ port, allowEdit }: Props): React.ReactElement => {\r\n  const classes = useStyles();\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const [offset, setOffset] = React.useState<any>(0);\r\n  const ref = useRef<HTMLHeadingElement>(null);\r\n  const windowWidth = useWindowSize().width;\r\n\r\n  React.useEffect(() => {\r\n    if (ref.current) {\r\n      setOffset(windowWidth - ref.current?.offsetLeft - 70);\r\n    }\r\n  }, [setOffset, windowWidth]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container background={port.background}>\r\n        <LandingCard ref={ref}>\r\n          {allowEdit && (\r\n            <div style={{ position: \"absolute\", top: 110, left: offset }}>\r\n              <LinkNoneStyle to={`${url}/edit_landing`}>\r\n                <IconButton style={{ backgroundColor: \"rgba(0,0,0,0.1)\" }}>\r\n                  <EditIcon color=\"primary\" />\r\n                </IconButton>\r\n              </LinkNoneStyle>\r\n            </div>\r\n          )}\r\n\r\n          <ItemDiv>\r\n            <Avatar\r\n              src={port.avatar ? port.avatar : \"/images/AvatarHex.jpg\"}\r\n              className={classes.avatar}\r\n            >\r\n              Avatar\r\n            </Avatar>\r\n          </ItemDiv>\r\n          <ItemDiv>\r\n            <Typography align=\"center\" className={classes.name}>\r\n              {port.name.firstName || \"?????\"} {port.name.lastName || \"?????\"}{\" \"}\r\n              <small>({port.name.nickName || \"??\"})</small>\r\n            </Typography>\r\n          </ItemDiv>\r\n          <SocialDiv>\r\n            <a\r\n              href={port.social.gitHup || \"#\"}\r\n              target={port.social.gitHup && \"_blank\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <SocialButton disabled={!port.social.gitHup}>\r\n                <GitHubIcon\r\n                  style={{\r\n                    color: !port.social.gitHup ? \"rgba(0,0,0,0.3)\" : \"white\",\r\n                  }}\r\n                />\r\n              </SocialButton>\r\n            </a>\r\n            <a\r\n              href={port.social.linkedIn || \"#\"}\r\n              target={port.social.linkedIn && \"_blank\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <SocialButton disabled={!port.social.linkedIn}>\r\n                <LinkedInIcon\r\n                  style={{\r\n                    color: !port.social.linkedIn\r\n                      ? \"rgba(0,0,0,0.3)\"\r\n                      : \"rgb(0, 127, 178)\",\r\n                  }}\r\n                />\r\n              </SocialButton>\r\n            </a>\r\n            <a\r\n              href={port.social.twitter || \"#\"}\r\n              target={port.social.twitter && \"_blank\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <SocialButton disabled={!port.social.twitter}>\r\n                <TwitterIcon\r\n                  style={{\r\n                    color: !port.social.twitter\r\n                      ? \"rgba(0,0,0,0.3)\"\r\n                      : \"rgb(0, 172, 237)\",\r\n                  }}\r\n                />\r\n              </SocialButton>\r\n            </a>\r\n            <a\r\n              href={port.social.faceBook || \"#\"}\r\n              target={port.social.faceBook && \"_blank\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <SocialButton disabled={!port.social.faceBook}>\r\n                <FacebookIcon\r\n                  color={port.social.faceBook ? \"primary\" : \"disabled\"}\r\n                />\r\n              </SocialButton>\r\n            </a>\r\n          </SocialDiv>\r\n          <ItemDiv>\r\n            <Typography align=\"center\" className={classes.email}>\r\n              Email: {port.contact.email || \"????\"}\r\n            </Typography>\r\n          </ItemDiv>\r\n          <ItemDiv>\r\n            <Typography align=\"center\" className={classes.contact}>\r\n              Tel: {port.contact.tel || \"????\"}\r\n            </Typography>\r\n          </ItemDiv>\r\n        </LandingCard>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import { useState, useEffect } from \"react\";\r\n\r\ninterface windowsState {\r\n  width: number | 0;\r\n  height: number | 0;\r\n}\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState<windowsState>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core/\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport LinkNoneStyle from \"../utilsComponents/LinkNoneStyle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Works } from \"src/generated/graphql\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n    padding: 5,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  action: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"auto\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    textTransform: \"capitalize\",\r\n    backgroundColor: \" rgba(0,0,0,0.7)\",\r\n\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(0,0,0,0.4)\",\r\n    },\r\n  },\r\n});\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype Props = {\r\n  work: Works;\r\n  allowEdit: Boolean;\r\n};\r\n\r\nexport default function ProjectItem({ work, allowEdit }: Props) {\r\n  const classes = useStyles();\r\n  const { url } = useRouteMatch() as myMatch;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={work.previewImage || \"/images/BackgroundHex.jpg\"}\r\n      >\r\n        {allowEdit && (\r\n          <div style={{ textAlign: \"right\" }}>\r\n            <LinkNoneStyle to={`${url}/work/${work.id}`}>\r\n              <IconButton\r\n                size=\"small\"\r\n                style={{\r\n                  backgroundColor: \"rgba(255,255,255,0.3)\",\r\n                  marginRight: 3,\r\n                }}\r\n              >\r\n                <EditIcon color=\"primary\" />\r\n              </IconButton>\r\n            </LinkNoneStyle>\r\n            <LinkNoneStyle to={`${url}/work/${work.id}/delete`}>\r\n              <IconButton\r\n                size=\"small\"\r\n                style={{\r\n                  backgroundColor: \"rgba(255,255,255,0.3)\",\r\n                }}\r\n              >\r\n                <DeleteIcon color=\"secondary\" />\r\n              </IconButton>\r\n            </LinkNoneStyle>\r\n          </div>\r\n        )}\r\n\r\n        <CardActions className={classes.action}>\r\n          {work.viewDemo && (\r\n            <a\r\n              href={work.viewDemo}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ textDecoration: \"none\", width: \"100%\" }}\r\n            >\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                className={classes.button}\r\n              >\r\n                Live Demo\r\n              </Button>\r\n            </a>\r\n          )}\r\n          {work.viewGitHup && (\r\n            <a\r\n              href={work.viewGitHup}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ textDecoration: \"none\", width: \"100%\" }}\r\n            >\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                className={classes.button}\r\n              >\r\n                Githup\r\n              </Button>\r\n            </a>\r\n          )}\r\n        </CardActions>\r\n      </CardMedia>\r\n      <CardContent\r\n        style={{ wordBreak: \"break-word\", height: \"100%\", padding: 10 }}\r\n      >\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {work.name || \"???\"}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          {work.description || \"?????\"}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          style={{ marginTop: 10 }}\r\n        >\r\n          Skill used:\r\n        </Typography>\r\n        {work.skillsUsed.length > 0 && (\r\n          <div\r\n            style={{\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: 3,\r\n            }}\r\n          >\r\n            {work.skillsUsed.map((s, i) => (\r\n              <Typography\r\n                key={i}\r\n                style={{\r\n                  fontSize: 16,\r\n                  margin: 5,\r\n                  border: \"1px solid rgba(0,0,0,0.5)\",\r\n                  borderRadius: 3,\r\n                }}\r\n                variant=\"body2\"\r\n                color=\"primary\"\r\n                component=\"p\"\r\n                align=\"center\"\r\n              >\r\n                {s}\r\n              </Typography>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Typography, CardActionArea, Card } from \"@material-ui/core/\";\r\nimport ProjectItem from \"./ProjectItem\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LinkNoneStyle from \"../utilsComponents/LinkNoneStyle\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Works } from \"src/generated/graphql\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 10px;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\n\r\nconst ProjectDiv = styled.div`\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  margin: auto;\r\n  width: 100%;\r\n  max-width: 900px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype Props = {\r\n  works: Works[];\r\n  allowEdit: Boolean;\r\n};\r\n\r\nconst Projects = ({ works, allowEdit }: Props): React.ReactElement => {\r\n  const { url } = useRouteMatch() as myMatch;\r\n  return (\r\n    <Container>\r\n      <Typography\r\n        align=\"center\"\r\n        variant=\"h6\"\r\n        component=\"h4\"\r\n        style={{ marginBottom: 20 }}\r\n      >\r\n        My Projects\r\n      </Typography>\r\n      <ProjectDiv>\r\n        {works.length > 0\r\n          ? works.map((w) => (\r\n              <ProjectItem key={w.id} work={w} allowEdit={allowEdit} />\r\n            ))\r\n          : null}\r\n        {allowEdit && (\r\n          <LinkNoneStyle to={`${url}/work/create`}>\r\n            <Card style={{ maxWidth: 345, height: \"100%\" }}>\r\n              <CardActionArea\r\n                style={{\r\n                  height: \"100%\",\r\n                  display: \"grid\",\r\n                  placeItems: \"center\",\r\n                }}\r\n              >\r\n                <AddIcon style={{ fontSize: 100 }} color=\"primary\" />\r\n              </CardActionArea>\r\n            </Card>\r\n          </LinkNoneStyle>\r\n        )}\r\n      </ProjectDiv>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { AlertTypes, alert, SeverityTypes } from \"./alert.interface\";\r\nimport { AlertState } from \"./alert.reducer\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { Action } from \"redux\";\r\n\r\ninterface SetParams {\r\n  message: string;\r\n  type: SeverityTypes;\r\n}\r\n\r\ntype MyThunkDispatch = ThunkDispatch<AlertState, AlertTypes, Action>;\r\n\r\nexport const SetAlert = ({ message, type }: SetParams) => (\r\n  dispatch: MyThunkDispatch\r\n) => {\r\n  const id = uuidv4();\r\n  const payload = { id, message, type };\r\n  dispatch({\r\n    type: \"SetAlert\",\r\n    payload,\r\n  });\r\n\r\n  setTimeout(() => dispatch(RemoveAlert(payload)), 3000);\r\n};\r\n\r\nconst RemoveAlert = (payload: alert): AlertTypes => ({\r\n  type: \"RemoveAlert\",\r\n  payload: payload,\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Typography, IconButton, TextField } from \"@material-ui/core/\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport { useEditAboutMutation } from \"../../generated/graphql\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { SetAlert } from \"../../redux/alert/alert.action\";\r\nimport store from \"../../redux/store\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 0 50px 0;\r\n  text-align: center;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\n\r\nconst AboutDiv = styled.div`\r\n  display: inline-block;\r\n  text-align: center;\r\n  max-width: 900px;\r\n  width: 100%;\r\n  word-break: break-word;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nconst InputEditAbout = styled(TextField)`\r\n  width: 100%;\r\n  animation: expand 0.5s ease-out;\r\n  @keyframes expand {\r\n    from {\r\n      transform: scaleX(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst About = ({ about, SetAlert, allowEdit }: Props): React.ReactElement => {\r\n  const [edit, setEdit] = React.useState(false);\r\n  const [aboutMe, setAboutMe] = React.useState(about);\r\n  const [editAbout] = useEditAboutMutation();\r\n\r\n  const handleChange = (e: any) => {\r\n    setAboutMe(e.target.value);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    if (edit) {\r\n      store.dispatch({ type: \"SetLoading\", payload: true });\r\n      const { data } = await editAbout({ variables: { about: aboutMe } });\r\n      if (data) {\r\n        SetAlert({\r\n          type: \"success\",\r\n          message: \"Edited description about you successfully.\",\r\n        });\r\n      }\r\n      store.dispatch({ type: \"SetLoading\", payload: false });\r\n    }\r\n    setEdit(!edit);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"h6\"\r\n          component=\"h4\"\r\n          style={{ marginBottom: 20 }}\r\n        >\r\n          About\r\n        </Typography>\r\n        <AboutDiv>\r\n          {allowEdit && (\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <IconButton onClick={handleEdit}>\r\n                {edit ? (\r\n                  <DoneIcon color=\"primary\" />\r\n                ) : (\r\n                  <EditIcon color=\"primary\" />\r\n                )}\r\n              </IconButton>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ padding: allowEdit ? \"0 30px 30px 30px\" : \"30px\" }}>\r\n            {edit && allowEdit ? (\r\n              <InputEditAbout\r\n                multiline\r\n                rowsMax={10}\r\n                variant=\"outlined\"\r\n                label=\"About\"\r\n                defaultValue={about}\r\n                onChange={handleChange}\r\n              />\r\n            ) : (\r\n              <Typography>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                {about ? about : \"Description about your self.\"}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </AboutDiv>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ntype OwnProps = {\r\n  about: string;\r\n  allowEdit: Boolean;\r\n};\r\n\r\nconst mapStateToProps = (_: any, ownProps: OwnProps) => {\r\n  return {\r\n    about: ownProps.about,\r\n    allowEdit: ownProps.allowEdit,\r\n  };\r\n};\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(About);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Typography, IconButton, TextField } from \"@material-ui/core/\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport { useEditResumeMutation } from \"../../generated/graphql\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { SetAlert } from \"../../redux/alert/alert.action\";\r\nimport { validURL } from \"src/utils/validURL\";\r\nimport store from \"../../redux/store\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 0 50px 0;\r\n  border-bottom: 2px solid #ccc;\r\n`;\r\n\r\nconst ResumeDiv = styled.div`\r\n  margin: auto;\r\n  max-width: 900px;\r\n  word-break: break-all;\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst ResumeFrame = styled.iframe`\r\n  width: 100%;\r\n  height: 600px;\r\n  border: 2px solid #ccc;\r\n  outline: none;\r\n`;\r\n\r\nconst InputEditResume = styled(TextField)`\r\n  max-width: 400px;\r\n  width: 100%;\r\n  animation: expand 0.5s ease-out;\r\n  @keyframes expand {\r\n    from {\r\n      transform: scaleX(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Resume = ({ resume, SetAlert, allowEdit }: Props): React.ReactElement => {\r\n  const [edit, setEdit] = React.useState(false);\r\n  const [myResume, setMyResume] = React.useState(resume);\r\n  const [error, setError] = React.useState(false);\r\n  const [editResume] = useEditResumeMutation();\r\n\r\n  const handleChange = (e: any) => {\r\n    setMyResume(e.target.value);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    setError(false);\r\n    if (edit) {\r\n      if (!validURL(myResume) && myResume) {\r\n        setError(true);\r\n        return;\r\n      }\r\n      store.dispatch({ type: \"SetLoading\", payload: true });\r\n      const { data } = await editResume({ variables: { resume: myResume } });\r\n      if (data) {\r\n        SetAlert({ type: \"success\", message: \"Edited resume successfully.\" });\r\n      }\r\n      store.dispatch({ type: \"SetLoading\", payload: false });\r\n    }\r\n    setEdit(!edit);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography\r\n        align=\"center\"\r\n        variant=\"h6\"\r\n        component=\"h4\"\r\n        style={{ marginBottom: 20 }}\r\n      >\r\n        Resume\r\n      </Typography>\r\n      <ResumeDiv>\r\n        {allowEdit && (\r\n          <div style={{ textAlign: \"right\", marginBottom: 20 }}>\r\n            {error && (\r\n              <p\r\n                style={{\r\n                  margin: \"0 0 5px 0\",\r\n                  padding: 0,\r\n                  color: \"red\",\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                This field must be url.\r\n              </p>\r\n            )}\r\n            {edit && (\r\n              <InputEditResume\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"Resume URL\"\r\n                style={{ margin: \"5px\" }}\r\n                defaultValue={resume}\r\n                onChange={handleChange}\r\n                error={error}\r\n              />\r\n            )}\r\n            <IconButton color=\"primary\" onClick={handleEdit}>\r\n              {edit ? (\r\n                <DoneIcon color=\"primary\" />\r\n              ) : (\r\n                <EditIcon color=\"primary\" />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n\r\n        <ResumeFrame src={resume} title=\"Resume\"></ResumeFrame>\r\n      </ResumeDiv>\r\n    </Container>\r\n  );\r\n};\r\n\r\ntype OwnProps = {\r\n  resume: string;\r\n  allowEdit: Boolean;\r\n};\r\nconst mapStateToProps = (_: any, ownProps: OwnProps) => {\r\n  return {\r\n    resume: ownProps.resume,\r\n    allowEdit: ownProps.allowEdit,\r\n  };\r\n};\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(Resume);\r\n","export function validURL(str: string) {\r\n  var pattern = new RegExp(\r\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n    \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n    \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n    \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n    \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n    \"i\"\r\n  ); // fragment locator\r\n  return !!pattern.test(str);\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport Landing from \"./Landing\";\r\nimport Projects from \"./Projects\";\r\nimport About from \"./About\";\r\nimport Resume from \"./Resume\";\r\nimport { OffSetContext, MyStoreOffset } from \"../../Context/storeOffset\";\r\nimport { ConnectedProps, connect } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { MyReducers } from \"src/redux/rootReducer\";\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\nconst Portfolio = ({ currentPort, currentUser }: Props) => {\r\n  const { setOffSet } = useContext(OffSetContext) as MyStoreOffset;\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const [allowEdit, setAllowEdit] = React.useState(false);\r\n  const userId = url.split(\"/\")[2];\r\n  const LandingRef = useRef<HTMLHeadingElement>(null);\r\n  const ProjectRef = useRef<HTMLHeadingElement>(null);\r\n  const AboutRef = useRef<HTMLHeadingElement>(null);\r\n  const ResumeRef = useRef<HTMLHeadingElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser && currentUser.username === userId) {\r\n      setAllowEdit(true);\r\n    }\r\n    setOffSet({\r\n      landing: LandingRef.current?.offsetTop,\r\n      project: ProjectRef.current?.offsetTop,\r\n      about: AboutRef.current?.offsetTop,\r\n      resume: ResumeRef.current?.offsetTop,\r\n    });\r\n  }, [setOffSet, currentPort, setAllowEdit, currentUser, userId]);\r\n\r\n  return (\r\n    currentPort && (\r\n      <React.Fragment>\r\n        <div ref={LandingRef}>\r\n          <Landing port={currentPort} allowEdit={allowEdit} />\r\n        </div>\r\n        <div ref={ProjectRef}>\r\n          <Projects works={currentPort?.works} allowEdit={allowEdit} />\r\n        </div>\r\n        <div ref={AboutRef}>\r\n          <About about={currentPort?.about} allowEdit={allowEdit} />\r\n        </div>\r\n        <div ref={ResumeRef}>\r\n          <Resume resume={currentPort.resume} allowEdit={allowEdit} />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentPort: state.portReducer.currentPort,\r\n  currentUser: state.userReducer.currentUser,\r\n});\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(Portfolio);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\ntype Props = {\r\n  onDismiss: () => void;\r\n  title: string;\r\n  content: React.ReactElement;\r\n  actions: React.ReactElement;\r\n  isLoading?: Boolean;\r\n};\r\n\r\nconst Container1 = document.createElement(\"div\");\r\nconst ModalRoot = document.querySelector(\"#modal\");\r\n\r\nconst OutSide = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 999;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n  max-width: 400px;\r\n  background-color: white;\r\n  padding: 20px 60px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default function Modal({\r\n  onDismiss,\r\n  title,\r\n  content,\r\n  actions,\r\n  isLoading,\r\n}: Props) {\r\n  React.useEffect(() => {\r\n    ModalRoot?.appendChild(Container1);\r\n\r\n    return () => {\r\n      ModalRoot?.removeChild(Container1);\r\n    };\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <OutSide onClick={onDismiss}>\r\n      <ModalBody onClick={(e) => e.stopPropagation()}>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h5\"\r\n          component=\"h2\"\r\n          style={{ margin: \"10px 0\" }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <div style={{ margin: \"15px 0\" }}>{content}</div>\r\n        <div>{actions}</div>\r\n      </ModalBody>\r\n      {isLoading && (\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0,0,0,0.9)\",\r\n            placeItems: \"center\",\r\n            minHeight: \"100vh\",\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 9999,\r\n          }}\r\n        >\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      )}\r\n    </OutSide>,\r\n    Container1\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { LandingInput } from \"../../generated/graphql\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\nimport { currentPort } from \"../../redux/Port/port.interface\";\r\n\r\nconst LandingSchema = yup.object().shape({\r\n  handlePath: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"This field is required.\")\r\n    .min(5, \"This field must be less then 5 chars.\")\r\n    .max(30),\r\n  email: yup.string().email(\"Invalid email.\"),\r\n  fitsName: yup.string().trim().max(20),\r\n  lastName: yup.string().trim().max(20),\r\n  nickName: yup.string().trim().max(20),\r\n  tel: yup.string().trim().max(20),\r\n  avatar: yup.string().url(\"This field must be url.\"),\r\n  background: yup.string().url(\"This field must be url.\"),\r\n  gitHup: yup.string().url(\"This field must be url.\"),\r\n  faceBook: yup.string().url(\"This field must be url.\"),\r\n  twitter: yup.string().url(\"This field must be url.\"),\r\n  linkedIn: yup.string().url(\"This field must be url.\"),\r\n});\r\n\r\ntype Props = {\r\n  currentPort: currentPort;\r\n  onSubmit: (values: LandingInput) => void;\r\n};\r\nconst EditLandingForm = ({\r\n  currentPort,\r\n  onSubmit,\r\n}: Props): React.ReactElement => {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(LandingSchema),\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit<LandingInput>(onSubmit)}>\r\n      <TextField\r\n        name=\"handlePath\"\r\n        label=\"handlePath\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.handlePath}\r\n        inputRef={register}\r\n        error={!!errors.handlePath}\r\n        autoComplete=\"off\"\r\n      />\r\n      {errors.handlePath && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.handlePath.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"avatar\"\r\n        label=\"Avatar URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.avatar}\r\n        inputRef={register}\r\n        error={!!errors.avatar}\r\n        autoComplete=\"off\"\r\n      />\r\n      {errors.avatar && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.avatar.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"background\"\r\n        label=\"Background URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.background}\r\n        inputRef={register}\r\n        error={!!errors.background}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.background && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.background.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"firstName\"\r\n        label=\"FirstName\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.name.firstName}\r\n        inputRef={register}\r\n        error={!!errors.firstName}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.firstName && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.firstName.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"lastName\"\r\n        label=\"LastName\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.name.lastName}\r\n        inputRef={register}\r\n        error={!!errors.lastName}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.lastName && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.lastName.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"nickName\"\r\n        label=\"NickName\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.name.nickName}\r\n        inputRef={register}\r\n        error={!!errors.nickName}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.nickName && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.nickName.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"gitHup\"\r\n        label=\"GitHup URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.social.gitHup}\r\n        inputRef={register}\r\n        error={!!errors.gitHup}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.gitHup && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.gitHup.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"linkedIn\"\r\n        label=\"LinkedIn URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.social.linkedIn}\r\n        inputRef={register}\r\n        error={!!errors.linkedIn}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.linkedIn && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.linkedIn.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"twitter\"\r\n        label=\"Twitter URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.social.twitter}\r\n        inputRef={register}\r\n        error={!!errors.twitter}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.twitter && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.twitter.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"faceBook\"\r\n        label=\"Facebook URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.social.faceBook}\r\n        inputRef={register}\r\n        error={!!errors.faceBook}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.faceBook && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.faceBook.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.contact.email}\r\n        inputRef={register}\r\n        error={!!errors.email}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.email && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.email.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"tel\"\r\n        label=\"Telephone\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.contact.tel}\r\n        inputRef={register}\r\n        error={!!errors.tel}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.tel && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.tel.message}\r\n        </p>\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", marginTop: 10 }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditLandingForm;\r\n","import React from \"react\";\r\nimport Modal from \"../portal/Modal\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { ConnectedProps, connect } from \"react-redux\";\r\nimport EditLandingForm from \"../Components/editComponents/EditLandingForm\";\r\nimport { useEditLandingMutation, LandingInput } from \"../generated/graphql\";\r\nimport { SetAlert } from \"../redux/alert/alert.action\";\r\nimport store from \"../redux/store\";\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\nconst EditLanding = ({\r\n  currentPort,\r\n  currentUser,\r\n  SetAlert,\r\n}: Props): React.ReactElement => {\r\n  const { url } = useRouteMatch() as myMatch;\r\n\r\n  const history = useHistory();\r\n  const userId = url.split(\"/\")[2];\r\n\r\n  const [editLanding] = useEditLandingMutation();\r\n  const onSubmit = async (values: LandingInput) => {\r\n    store.dispatch({ type: \"SetLoading\", payload: true });\r\n    try {\r\n      const { data } = await editLanding({\r\n        variables: { data: values },\r\n      });\r\n      if (data) {\r\n        SetAlert({ message: \"Edited landing successfully.\", type: \"success\" });\r\n      }\r\n    } catch (error) {\r\n      SetAlert({ message: error.message, type: \"error\" });\r\n    }\r\n    store.dispatch({ type: \"SetLoading\", payload: false });\r\n    history.push(url.substring(0, url.length - 13));\r\n  };\r\n\r\n  if (userId !== currentUser?.username || !currentUser || !currentPort)\r\n    history.push(url.substring(0, url.length - 13));\r\n  return (\r\n    <Modal\r\n      onDismiss={() => history.push(url.substring(0, url.length - 13))}\r\n      title=\"Edit Landing\"\r\n      content={\r\n        <EditLandingForm currentPort={currentPort} onSubmit={onSubmit} />\r\n      }\r\n      actions={<div></div>}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n  currentPort: state.portReducer.currentPort,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(EditLanding);\r\n","import React from \"react\";\r\nimport { TextField, Typography, IconButton, Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport styled from \"styled-components\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { MyReducers } from \"../../redux/rootReducer\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useEditWorkMutation } from \"../../generated/graphql\";\r\nimport { SetAlert } from \"../../redux/alert/alert.action\";\r\nimport store from \"../../redux/store\";\r\n\r\nconst SkillUsedContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1px 5px;\r\n  border-radius: 3px;\r\n  border: 1px solid #ccc;\r\n  padding: 5px;\r\n`;\r\n\r\nconst SkillUsedDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst WorkSchema = yup.object().shape({\r\n  name: yup.string().max(20),\r\n  description: yup.string().max(100),\r\n  previewImage: yup.string().url(\"This field must be url.\"),\r\n  viewDemo: yup.string().url(\"This field must be url.\"),\r\n  viewGitHup: yup.string().url(\"This field must be url.\"),\r\n});\r\n\r\nconst EditWorkForm = ({ work, SetAlert, back }: Props): React.ReactElement => {\r\n  const [skills, setSkills] = React.useState(work?.skillsUsed || []);\r\n  const [errSkill, setErrSkill] = React.useState(false);\r\n  const [skill, setSkill] = React.useState(\"\");\r\n  const [addSkill, setAddSkill] = React.useState(false);\r\n\r\n  const [editWork] = useEditWorkMutation();\r\n\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(WorkSchema),\r\n  });\r\n\r\n  const handleAddSkill = () => {\r\n    if (!skill) {\r\n      setAddSkill(false);\r\n      return;\r\n    }\r\n    if (skills?.find((s) => s === skill)) {\r\n      setErrSkill(true);\r\n    } else {\r\n      setErrSkill(false);\r\n      skills?.push(skill);\r\n      setSkill(\"\");\r\n      setAddSkill(false);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (values: any) => {\r\n    store.dispatch({ type: \"SetLoading\", payload: true });\r\n    const { data } = await editWork({\r\n      variables: {\r\n        work: { ...values, id: work?.id || \"create\", skillsUsed: [...skills] },\r\n      },\r\n    });\r\n    if (data) {\r\n      SetAlert({ message: \"Edited work successfully.\", type: \"success\" });\r\n    }\r\n    store.dispatch({ type: \"SetLoading\", payload: false });\r\n    back();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={handleSubmit<any>(onSubmit)}>\r\n        <TextField\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.name}\r\n          inputRef={register}\r\n          error={!!errors.name}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.name && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.name.message}\r\n          </p>\r\n        )}\r\n        <TextField\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.description}\r\n          inputRef={register}\r\n          error={!!errors.description}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.description && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.description.message}\r\n          </p>\r\n        )}\r\n        <TextField\r\n          name=\"previewImage\"\r\n          label=\"PreviewImage URL\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.previewImage}\r\n          inputRef={register}\r\n          error={!!errors.previewImage}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.previewImage && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.previewImage.message}\r\n          </p>\r\n        )}\r\n        <TextField\r\n          name=\"viewDemo\"\r\n          label=\"Demo URL\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.viewDemo}\r\n          inputRef={register}\r\n          error={!!errors.viewDemo}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.viewDemo && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.viewDemo.message}\r\n          </p>\r\n        )}\r\n        <TextField\r\n          name=\"viewGitHup\"\r\n          label=\"GitHup URL\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.viewGitHup}\r\n          inputRef={register}\r\n          error={!!errors.viewGitHup}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.viewGitHup && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.viewGitHup.message}\r\n          </p>\r\n        )}\r\n        <div style={{ marginTop: 10 }}>\r\n          <Typography>\r\n            Skill used:\r\n            <IconButton onClick={() => setAddSkill(!addSkill)}>\r\n              {addSkill ? (\r\n                <CancelIcon color=\"secondary\" />\r\n              ) : (\r\n                <AddIcon color=\"primary\" />\r\n              )}\r\n            </IconButton>\r\n          </Typography>\r\n\r\n          {skills && skills.length > 0 && (\r\n            <SkillUsedContainer>\r\n              {skills.map((skill, index) => (\r\n                <SkillUsedDiv key={index}>\r\n                  <Typography>{skill}</Typography>\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      const newSkills = skills.filter((s) => s !== skill);\r\n                      setSkills(newSkills);\r\n                    }}\r\n                  >\r\n                    <DeleteIcon color=\"secondary\" />\r\n                  </IconButton>\r\n                </SkillUsedDiv>\r\n              ))}\r\n            </SkillUsedContainer>\r\n          )}\r\n\r\n          {addSkill && (\r\n            <React.Fragment>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <TextField\r\n                  label=\"Write skill...\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  style={{ width: \"100%\", margin: \"5px 0\" }}\r\n                  onChange={(e) => setSkill(e.target.value)}\r\n                  value={skill}\r\n                  autoComplete=\"off\"\r\n                  required\r\n                />\r\n                <IconButton onClick={handleAddSkill}>\r\n                  <DoneIcon color=\"primary\" />\r\n                </IconButton>\r\n              </div>\r\n              {errSkill && (\r\n                <p\r\n                  style={{\r\n                    margin: \"0 0 5px 0\",\r\n                    padding: 0,\r\n                    color: \"red\",\r\n                    fontSize: 14,\r\n                  }}\r\n                >\r\n                  You have already added this skill.\r\n                </p>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", marginTop: 10 }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ntype ownProps = {\r\n  workId: string;\r\n  back: () => void;\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers, ownProps: ownProps) => {\r\n  return {\r\n    work: state.portReducer.currentPort?.works.find(\r\n      (w) => w.id === ownProps.workId\r\n    ),\r\n    back: ownProps.back,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(EditWorkForm);\r\n","import React from \"react\";\r\nimport Modal from \"../portal/Modal\";\r\nimport { useRouteMatch, useHistory, useParams } from \"react-router-dom\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport EditWorkForm from \"../Components/editComponents/EditWorkForm\";\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype myParams = {\r\n  id: string;\r\n};\r\n\r\nconst EditWork = ({ currentPort, currentUser }: Props): React.ReactElement => {\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const { id } = useParams() as myParams;\r\n  const history = useHistory();\r\n  const title = id.toLowerCase() === \"create\" ? \"Create Work\" : \"Edit Work\";\r\n  const userId = url.split(\"/\")[2];\r\n\r\n  const handleDismiss = () => {\r\n    if (id.toLowerCase() === \"create\") {\r\n      history.push(url.substring(0, url.length - (6 + id.length)));\r\n    } else {\r\n      history.push(url.substring(0, url.length - (6 + id.length)));\r\n    }\r\n  };\r\n\r\n  if (userId !== currentUser?.username || !currentUser || !currentPort)\r\n    history.push(url.substring(0, url.length - (6 + id.length)));\r\n  return (\r\n    <Modal\r\n      onDismiss={handleDismiss}\r\n      title={title}\r\n      content={\r\n        <EditWorkForm\r\n          workId={id}\r\n          back={() =>\r\n            history.push(url.substring(0, url.length - (6 + id.length)))\r\n          }\r\n        />\r\n      }\r\n      actions={<div></div>}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => {\r\n  return {\r\n    currentUser: state.userReducer.currentUser,\r\n    currentPort: state.portReducer.currentPort,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(EditWork);\r\n","import React from \"react\";\r\nimport Modal from \"../portal/Modal\";\r\nimport { useRouteMatch, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDeleteWorkMutation } from \"../generated/graphql\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { SetAlert } from \"../redux/alert/alert.action\";\r\nimport store from \"../redux/store\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype myParams = {\r\n  id: string;\r\n};\r\n\r\nconst DeleteWork = ({\r\n  currentPort,\r\n  currentUser,\r\n  SetAlert,\r\n}: Props): React.ReactElement | null => {\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const { id } = useParams() as myParams;\r\n  const userId = url.split(\"/\")[2];\r\n  const history = useHistory();\r\n  const [deleteWork] = useDeleteWorkMutation();\r\n\r\n  const handleDelete = async () => {\r\n    store.dispatch({ type: \"SetLoading\", payload: true });\r\n    const { data } = await deleteWork({ variables: { workId: id } });\r\n    if (data) {\r\n      SetAlert({ type: \"success\", message: \"Deleted work successfully.\" });\r\n    }\r\n    store.dispatch({ type: \"SetLoading\", payload: false });\r\n    history.push(url.substring(0, url.length - (13 + id.length)));\r\n  };\r\n\r\n  if (userId !== currentUser?.username || !currentUser || !currentPort)\r\n    history.push(url.substring(0, url.length - (13 + id.length)));\r\n  return (\r\n    <Modal\r\n      onDismiss={() =>\r\n        history.push(url.substring(0, url.length - (13 + id.length)))\r\n      }\r\n      title=\"Delete Work\"\r\n      content={<div>Are you sure to delete this work. </div>}\r\n      actions={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleDelete}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            color=\"default\"\r\n            size=\"small\"\r\n            onClick={() =>\r\n              history.push(url.substring(0, url.length - (13 + id.length)))\r\n            }\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n  currentPort: state.portReducer.currentPort,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(DeleteWork);\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"../Components/portComponents/Navbar\";\r\nimport { Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport Portfolio from \"../Components/portComponents/Portfolio\";\r\nimport { OffSetContext, MyStoreOffset } from \"../Context/storeOffset\";\r\nimport EditLanding from \"./EditLanding\";\r\nimport EditWork from \"./EditWork\";\r\nimport DeleteWork from \"./DeleteWork\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useWhoPortQuery } from \"src/generated/graphql\";\r\nimport Spinner from \"../portal/Spinner\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport FallBackSpinner from \"../Components/FallBackSpinner\";\r\nimport { SetPort } from \"../redux/Port/port.action\";\r\n\r\nconst PortContainer = styled.div`\r\n  background-color: #e5e5e5;\r\n  width: 100%;\r\n`;\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype myParams = {\r\n  id: string;\r\n};\r\n\r\nconst PortfolioPage = ({ SetPort, loader, currentPort }: Props) => {\r\n  const { offset } = useContext(OffSetContext) as MyStoreOffset;\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const { id } = useParams() as myParams;\r\n  const { data, loading } = useWhoPortQuery({\r\n    variables: { handlePath: id },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (data) {\r\n      SetPort(data.whoPort as any);\r\n    }\r\n  }, [data, id, SetPort]);\r\n\r\n  if (!data && loading) return <FallBackSpinner />;\r\n  if (!data && !loading)\r\n    return (\r\n      <div style={{ height: \"100vh\", display: \"grid\", placeItems: \"center\" }}>\r\n        <h3>\r\n          Portfolio not found.\r\n          <Link style={{ color: \"#f50057\" }} to=\"/\">\r\n            Back home\r\n          </Link>\r\n        </h3>\r\n      </div>\r\n    );\r\n  return (\r\n    <PortContainer>\r\n      <Navbar offset={offset} />\r\n      <Route path={`${url}`} component={Portfolio} />\r\n      <Route exact path={`${url}/edit_landing`} component={EditLanding} />\r\n      <Route exact path={`${url}/work/:id`} component={EditWork} />\r\n      <Route exact path={`${url}/work/:id/delete`} component={DeleteWork} />\r\n      <Spinner isLoading={loader} />\r\n    </PortContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => {\r\n  return {\r\n    loader: state.loadReducer.isLoading,\r\n    currentPort: state.portReducer.currentPort,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { SetPort });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(PortfolioPage);\r\n","import { currentPort, PortTypes } from \"./port.interface\";\r\n\r\nexport const SetPort = (port: currentPort | null): PortTypes => ({\r\n  type: \"SetPort\",\r\n  payload: port,\r\n});\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport { useMeQuery } from \"./generated/graphql\";\r\nimport store from \"./redux/store\";\r\nimport Spinner from \"./portal/Spinner\";\r\nimport { OffSetContextProvider } from \"./Context/storeOffset\";\r\nimport LogoutButton from \"./Components/LogoutButton\";\r\nimport AlertMessage from \"./Components/AlertMessage\";\r\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\r\nimport HomePage from \"./Container/HomePage\";\r\nimport PortfolioPage from \"./Container/PortfolioPage\";\r\n\r\nconst App = (): React.ReactElement => {\r\n  const { data, loading } = useMeQuery();\r\n\r\n  React.useEffect(() => {\r\n    if (data) {\r\n      store.dispatch({ type: \"SetUser\", payload: data.me });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <OffSetContextProvider>\r\n      <AlertMessage />\r\n      <LogoutButton />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <ErrorBoundary>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/portfolio/:id\" component={PortfolioPage} />{\" \"}\r\n          </ErrorBoundary>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <Spinner isLoading={loading} />\r\n    </OffSetContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./redux/store\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport ApolloClient from \"apollo-client\";\r\n\r\nconst client = new ApolloClient({\r\n  link: createHttpLink({ uri: \"/graphql\", credentials: \"include\" }),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client as any}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </ApolloProvider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}