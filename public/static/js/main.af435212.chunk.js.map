{"version":3,"sources":["generated/graphql.tsx","redux/User/user.reducer.ts","redux/alert/alert.reducer.ts","redux/Port/port.reducer.ts","redux/loading/loading.reducer.ts","redux/rootReducer.ts","redux/store.ts","portal/Spinner.tsx","Context/storeOffset.tsx","Components/FallBackSpinner.tsx","Components/LogoutButton.tsx","redux/User/user.action.ts","Components/AlertMessage.tsx","Components/ErrorBoundary.tsx","Components/AuthButton.tsx","Components/utilsComponents/LinkNoneStyle.tsx","Container/HomePage.tsx","Components/portComponents/Navbar.tsx","Components/portComponents/Landing.tsx","utils/useWindowSize.ts","Components/portComponents/ProjectItem.tsx","Components/portComponents/Projects.tsx","redux/alert/alert.action.ts","Components/portComponents/About.tsx","Components/portComponents/Resume.tsx","utils/validURL.ts","Components/portComponents/Portfolio.tsx","portal/Modal.tsx","Components/editComponents/EditLandingForm.tsx","Container/EditLanding.tsx","Components/editComponents/EditWorkForm.tsx","Container/EditWork.tsx","Container/DeleteWork.tsx","Container/PortfolioPage.tsx","redux/Port/port.action.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["DeleteWorkDocument","gql","EditAboutDocument","EditLandingDocument","EditResumeDocument","EditWorkDocument","LogOutDocument","MeDocument","WhoPortDocument","INITIAL_STATE","currentUser","alerts","currentPort","ports","isLoading","combineReducers","userReducer","state","action","type","payload","alertReducer","filter","alert","id","portReducer","loadReducer","middleWares","reduxThunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","useStyles","makeStyles","theme","createStyles","root","display","marginLeft","spacing","width","height","justifyContent","backgroundColor","alignItems","minHeight","position","top","left","zIndex","Container","document","createElement","SpinnerRoot","querySelector","Spinner","classes","React","useEffect","appendChild","removeChild","ReactDOM","createPortal","className","CircularProgress","color","OffSetContext","createContext","OffSetContextProvider","children","useState","landing","project","about","resume","offset","setOffSet","Provider","value","FallBackSpinner","button","margin","bottom","right","transition","connector","connect","SetUser","user","baseOptions","ApolloReactHooks","logOut","loading","handleLogout","a","Button","onClick","variant","startIcon","AlertContainer","styled","div","AlertBox","Alert","minWidth","maxWidth","length","map","key","severity","AlertTitle","style","textTransform","message","ErrorBoundary","redirect","hasError","error","info","console","this","setTimeout","setState","to","placeItems","textDecoration","props","Component","img","p","AuthButton","LinkStyle","Link","LinkNoneStyle","HomeContainer","history","useHistory","gridTemplateColumns","gridGap","username","size","background","padding","borderRadius","textAlign","Autocomplete","options","getOptionLabel","option","handlePath","onChange","event","values","push","renderInput","params","TextField","label","e","log","target","flexGrow","maxHeight","homeButton","marginRight","menus","menuButton","breakpoints","down","menuIconButton","title","NavBarForMobile","showNav","Navbar","setShowNav","AppBar","Toolbar","IconButton","edge","aria-label","window","scrollTo","behavior","List","component","ListItem","ListItemText","primary","avatar","border","name","fontSize","email","marginTop","contact","LandingCard","ItemDiv","SocialDiv","SocialButton","Landing","port","allowEdit","url","useRouteMatch","setOffset","ref","useRef","windowWidth","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","current","offsetLeft","Fragment","Avatar","src","Typography","align","firstName","lastName","nickName","href","social","gitHup","rel","disabled","linkedIn","twitter","faceBook","tel","media","flexDirection","ProjectItem","work","Card","CardMedia","image","previewImage","CardActions","viewDemo","viewGitHup","CardContent","wordBreak","gutterBottom","description","skillsUsed","s","i","ProjectDiv","Projects","works","marginBottom","w","CardActionArea","SetAlert","dispatch","uuidv4","RemoveAlert","AboutDiv","InputEditAbout","_","ownProps","edit","setEdit","aboutMe","setAboutMe","editAbout","handleEdit","variables","data","multiline","rowsMax","defaultValue","ResumeDiv","ResumeFrame","iframe","InputEditResume","myResume","setMyResume","setError","editResume","str","RegExp","test","useContext","setAllowEdit","userId","split","LandingRef","ProjectRef","AboutRef","ResumeRef","offsetTop","Container1","ModalRoot","OutSide","ModalBody","Modal","onDismiss","content","actions","stopPropagation","LandingSchema","yup","shape","trim","required","min","max","fitsName","EditLandingForm","onSubmit","useForm","resolver","yupResolver","handleSubmit","register","errors","inputRef","autoComplete","editLanding","substring","SkillUsedContainer","SkillUsedDiv","WorkSchema","find","workId","back","skills","setSkills","errSkill","setErrSkill","skill","setSkill","addSkill","setAddSkill","editWork","index","newSkills","useParams","toLowerCase","deleteWork","handleDelete","PortContainer","loader","SetPort","whoPort","path","Portfolio","exact","EditLanding","EditWork","DeleteWork","axios","get","then","res","catch","err","App","me","HomePage","PortfolioPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","client","ApolloClient","uri","credentials","render","URL","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.af435212.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\nimport * as ApolloReactCommon from '@apollo/react-common';\r\nimport * as ApolloReactHooks from '@apollo/react-hooks';\r\nexport type Maybe<T> = T | null;\r\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n  ID: string;\r\n  String: string;\r\n  Boolean: boolean;\r\n  Int: number;\r\n  Float: number;\r\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\r\n  DateTime: any;\r\n};\r\n\r\nexport type Query = {\r\n  __typename?: 'Query';\r\n  me: User;\r\n  hello: Scalars['String'];\r\n  users: Array<Maybe<User>>;\r\n  whoPort?: Maybe<Portfolio>;\r\n};\r\n\r\n\r\nexport type QueryWhoPortArgs = {\r\n  handlePath: Scalars['String'];\r\n};\r\n\r\n/** User model */\r\nexport type User = {\r\n  __typename?: 'User';\r\n  id: Scalars['ID'];\r\n  username: Scalars['String'];\r\n  email: Scalars['String'];\r\n  createdAt: Scalars['DateTime'];\r\n};\r\n\r\n\r\n/** Portfolio model */\r\nexport type Portfolio = {\r\n  __typename?: 'Portfolio';\r\n  id: Scalars['ID'];\r\n  handlePath: Scalars['String'];\r\n  avatar: Scalars['String'];\r\n  resume: Scalars['String'];\r\n  background: Scalars['String'];\r\n  name: Name;\r\n  social: Social;\r\n  works: Array<Works>;\r\n  contact: Contact;\r\n  about: Scalars['String'];\r\n  createdAt: Scalars['DateTime'];\r\n};\r\n\r\nexport type Name = {\r\n  __typename?: 'Name';\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  nickName: Scalars['String'];\r\n};\r\n\r\nexport type Social = {\r\n  __typename?: 'Social';\r\n  gitHup: Scalars['String'];\r\n  faceBook: Scalars['String'];\r\n  linkedIn: Scalars['String'];\r\n  twitter: Scalars['String'];\r\n};\r\n\r\nexport type Works = {\r\n  __typename?: 'Works';\r\n  id: Scalars['ID'];\r\n  name: Scalars['String'];\r\n  previewImage: Scalars['String'];\r\n  description: Scalars['String'];\r\n  viewDemo: Scalars['String'];\r\n  viewGitHup: Scalars['String'];\r\n  skillsUsed: Array<Scalars['String']>;\r\n};\r\n\r\nexport type Contact = {\r\n  __typename?: 'Contact';\r\n  email: Scalars['String'];\r\n  tel: Scalars['String'];\r\n};\r\n\r\nexport type Mutation = {\r\n  __typename?: 'Mutation';\r\n  logOut: Scalars['String'];\r\n  editLanding?: Maybe<Portfolio>;\r\n  editAbout?: Maybe<Portfolio>;\r\n  editResume: Portfolio;\r\n  editWork: Portfolio;\r\n  deleteWork: Portfolio;\r\n};\r\n\r\n\r\nexport type MutationEditLandingArgs = {\r\n  data: LandingInput;\r\n};\r\n\r\n\r\nexport type MutationEditAboutArgs = {\r\n  about: Scalars['String'];\r\n};\r\n\r\n\r\nexport type MutationEditResumeArgs = {\r\n  resume: Scalars['String'];\r\n};\r\n\r\n\r\nexport type MutationEditWorkArgs = {\r\n  work: WorkInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteWorkArgs = {\r\n  workId: Scalars['String'];\r\n};\r\n\r\nexport type LandingInput = {\r\n  handlePath: Scalars['String'];\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  nickName: Scalars['String'];\r\n  avatar: Scalars['String'];\r\n  background: Scalars['String'];\r\n  linkedIn: Scalars['String'];\r\n  gitHup: Scalars['String'];\r\n  faceBook: Scalars['String'];\r\n  twitter: Scalars['String'];\r\n  email: Scalars['String'];\r\n  tel: Scalars['String'];\r\n};\r\n\r\nexport type WorkInput = {\r\n  id: Scalars['String'];\r\n  name: Scalars['String'];\r\n  previewImage: Scalars['String'];\r\n  description: Scalars['String'];\r\n  viewDemo: Scalars['String'];\r\n  viewGitHup: Scalars['String'];\r\n  skillsUsed: Array<Scalars['String']>;\r\n};\r\n\r\nexport type DeleteWorkMutationVariables = Exact<{\r\n  workId: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type DeleteWorkMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { deleteWork: (\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type EditAboutMutationVariables = Exact<{\r\n  about: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type EditAboutMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { editAbout?: Maybe<(\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\nexport type EditLandingMutationVariables = Exact<{\r\n  data: LandingInput;\r\n}>;\r\n\r\n\r\nexport type EditLandingMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { editLanding?: Maybe<(\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\nexport type EditResumeMutationVariables = Exact<{\r\n  resume: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type EditResumeMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { editResume: (\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type EditWorkMutationVariables = Exact<{\r\n  work: WorkInput;\r\n}>;\r\n\r\n\r\nexport type EditWorkMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { editWork: (\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type HelloQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type HelloQuery = (\r\n  { __typename?: 'Query' }\r\n  & Pick<Query, 'hello'>\r\n);\r\n\r\nexport type LogOutMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type LogOutMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & Pick<Mutation, 'logOut'>\r\n);\r\n\r\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type MeQuery = (\r\n  { __typename?: 'Query' }\r\n  & { me: (\r\n    { __typename?: 'User' }\r\n    & Pick<User, 'id' | 'email' | 'username' | 'createdAt'>\r\n  ) }\r\n);\r\n\r\nexport type WhoPortQueryVariables = Exact<{\r\n  handlePath: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type WhoPortQuery = (\r\n  { __typename?: 'Query' }\r\n  & { whoPort?: Maybe<(\r\n    { __typename?: 'Portfolio' }\r\n    & Pick<Portfolio, 'id' | 'avatar' | 'background' | 'handlePath' | 'about' | 'resume' | 'createdAt'>\r\n    & { name: (\r\n      { __typename?: 'Name' }\r\n      & Pick<Name, 'firstName' | 'lastName' | 'nickName'>\r\n    ), social: (\r\n      { __typename?: 'Social' }\r\n      & Pick<Social, 'gitHup' | 'faceBook' | 'linkedIn' | 'twitter'>\r\n    ), contact: (\r\n      { __typename?: 'Contact' }\r\n      & Pick<Contact, 'email' | 'tel'>\r\n    ), works: Array<(\r\n      { __typename?: 'Works' }\r\n      & Pick<Works, 'id' | 'name' | 'description' | 'previewImage' | 'viewDemo' | 'viewGitHup' | 'skillsUsed'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\n\r\nexport const DeleteWorkDocument = gql`\r\n    mutation deleteWork($workId: String!) {\r\n  deleteWork(workId: $workId) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type DeleteWorkMutationFn = ApolloReactCommon.MutationFunction<DeleteWorkMutation, DeleteWorkMutationVariables>;\r\n\r\n/**\r\n * __useDeleteWorkMutation__\r\n *\r\n * To run a mutation, you first call `useDeleteWorkMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useDeleteWorkMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [deleteWorkMutation, { data, loading, error }] = useDeleteWorkMutation({\r\n *   variables: {\r\n *      workId: // value for 'workId'\r\n *   },\r\n * });\r\n */\r\nexport function useDeleteWorkMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<DeleteWorkMutation, DeleteWorkMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<DeleteWorkMutation, DeleteWorkMutationVariables>(DeleteWorkDocument, baseOptions);\r\n      }\r\nexport type DeleteWorkMutationHookResult = ReturnType<typeof useDeleteWorkMutation>;\r\nexport type DeleteWorkMutationResult = ApolloReactCommon.MutationResult<DeleteWorkMutation>;\r\nexport type DeleteWorkMutationOptions = ApolloReactCommon.BaseMutationOptions<DeleteWorkMutation, DeleteWorkMutationVariables>;\r\nexport const EditAboutDocument = gql`\r\n    mutation editAbout($about: String!) {\r\n  editAbout(about: $about) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type EditAboutMutationFn = ApolloReactCommon.MutationFunction<EditAboutMutation, EditAboutMutationVariables>;\r\n\r\n/**\r\n * __useEditAboutMutation__\r\n *\r\n * To run a mutation, you first call `useEditAboutMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useEditAboutMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [editAboutMutation, { data, loading, error }] = useEditAboutMutation({\r\n *   variables: {\r\n *      about: // value for 'about'\r\n *   },\r\n * });\r\n */\r\nexport function useEditAboutMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditAboutMutation, EditAboutMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<EditAboutMutation, EditAboutMutationVariables>(EditAboutDocument, baseOptions);\r\n      }\r\nexport type EditAboutMutationHookResult = ReturnType<typeof useEditAboutMutation>;\r\nexport type EditAboutMutationResult = ApolloReactCommon.MutationResult<EditAboutMutation>;\r\nexport type EditAboutMutationOptions = ApolloReactCommon.BaseMutationOptions<EditAboutMutation, EditAboutMutationVariables>;\r\nexport const EditLandingDocument = gql`\r\n    mutation editLanding($data: LandingInput!) {\r\n  editLanding(data: $data) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type EditLandingMutationFn = ApolloReactCommon.MutationFunction<EditLandingMutation, EditLandingMutationVariables>;\r\n\r\n/**\r\n * __useEditLandingMutation__\r\n *\r\n * To run a mutation, you first call `useEditLandingMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useEditLandingMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [editLandingMutation, { data, loading, error }] = useEditLandingMutation({\r\n *   variables: {\r\n *      data: // value for 'data'\r\n *   },\r\n * });\r\n */\r\nexport function useEditLandingMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditLandingMutation, EditLandingMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<EditLandingMutation, EditLandingMutationVariables>(EditLandingDocument, baseOptions);\r\n      }\r\nexport type EditLandingMutationHookResult = ReturnType<typeof useEditLandingMutation>;\r\nexport type EditLandingMutationResult = ApolloReactCommon.MutationResult<EditLandingMutation>;\r\nexport type EditLandingMutationOptions = ApolloReactCommon.BaseMutationOptions<EditLandingMutation, EditLandingMutationVariables>;\r\nexport const EditResumeDocument = gql`\r\n    mutation editResume($resume: String!) {\r\n  editResume(resume: $resume) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type EditResumeMutationFn = ApolloReactCommon.MutationFunction<EditResumeMutation, EditResumeMutationVariables>;\r\n\r\n/**\r\n * __useEditResumeMutation__\r\n *\r\n * To run a mutation, you first call `useEditResumeMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useEditResumeMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [editResumeMutation, { data, loading, error }] = useEditResumeMutation({\r\n *   variables: {\r\n *      resume: // value for 'resume'\r\n *   },\r\n * });\r\n */\r\nexport function useEditResumeMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditResumeMutation, EditResumeMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<EditResumeMutation, EditResumeMutationVariables>(EditResumeDocument, baseOptions);\r\n      }\r\nexport type EditResumeMutationHookResult = ReturnType<typeof useEditResumeMutation>;\r\nexport type EditResumeMutationResult = ApolloReactCommon.MutationResult<EditResumeMutation>;\r\nexport type EditResumeMutationOptions = ApolloReactCommon.BaseMutationOptions<EditResumeMutation, EditResumeMutationVariables>;\r\nexport const EditWorkDocument = gql`\r\n    mutation editWork($work: WorkInput!) {\r\n  editWork(work: $work) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\nexport type EditWorkMutationFn = ApolloReactCommon.MutationFunction<EditWorkMutation, EditWorkMutationVariables>;\r\n\r\n/**\r\n * __useEditWorkMutation__\r\n *\r\n * To run a mutation, you first call `useEditWorkMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useEditWorkMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [editWorkMutation, { data, loading, error }] = useEditWorkMutation({\r\n *   variables: {\r\n *      work: // value for 'work'\r\n *   },\r\n * });\r\n */\r\nexport function useEditWorkMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditWorkMutation, EditWorkMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<EditWorkMutation, EditWorkMutationVariables>(EditWorkDocument, baseOptions);\r\n      }\r\nexport type EditWorkMutationHookResult = ReturnType<typeof useEditWorkMutation>;\r\nexport type EditWorkMutationResult = ApolloReactCommon.MutationResult<EditWorkMutation>;\r\nexport type EditWorkMutationOptions = ApolloReactCommon.BaseMutationOptions<EditWorkMutation, EditWorkMutationVariables>;\r\nexport const HelloDocument = gql`\r\n    query hello {\r\n  hello\r\n}\r\n    `;\r\n\r\n/**\r\n * __useHelloQuery__\r\n *\r\n * To run a query within a React component, call `useHelloQuery` and pass it any options that fit your needs.\r\n * When your component renders, `useHelloQuery` returns an object from Apollo Client that contains loading, error, and data properties\r\n * you can use to render your UI.\r\n *\r\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\r\n *\r\n * @example\r\n * const { data, loading, error } = useHelloQuery({\r\n *   variables: {\r\n *   },\r\n * });\r\n */\r\nexport function useHelloQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<HelloQuery, HelloQueryVariables>) {\r\n        return ApolloReactHooks.useQuery<HelloQuery, HelloQueryVariables>(HelloDocument, baseOptions);\r\n      }\r\nexport function useHelloLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<HelloQuery, HelloQueryVariables>) {\r\n          return ApolloReactHooks.useLazyQuery<HelloQuery, HelloQueryVariables>(HelloDocument, baseOptions);\r\n        }\r\nexport type HelloQueryHookResult = ReturnType<typeof useHelloQuery>;\r\nexport type HelloLazyQueryHookResult = ReturnType<typeof useHelloLazyQuery>;\r\nexport type HelloQueryResult = ApolloReactCommon.QueryResult<HelloQuery, HelloQueryVariables>;\r\nexport const LogOutDocument = gql`\r\n    mutation logOut {\r\n  logOut\r\n}\r\n    `;\r\nexport type LogOutMutationFn = ApolloReactCommon.MutationFunction<LogOutMutation, LogOutMutationVariables>;\r\n\r\n/**\r\n * __useLogOutMutation__\r\n *\r\n * To run a mutation, you first call `useLogOutMutation` within a React component and pass it any options that fit your needs.\r\n * When your component renders, `useLogOutMutation` returns a tuple that includes:\r\n * - A mutate function that you can call at any time to execute the mutation\r\n * - An object with fields that represent the current status of the mutation's execution\r\n *\r\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\r\n *\r\n * @example\r\n * const [logOutMutation, { data, loading, error }] = useLogOutMutation({\r\n *   variables: {\r\n *   },\r\n * });\r\n */\r\nexport function useLogOutMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LogOutMutation, LogOutMutationVariables>) {\r\n        return ApolloReactHooks.useMutation<LogOutMutation, LogOutMutationVariables>(LogOutDocument, baseOptions);\r\n      }\r\nexport type LogOutMutationHookResult = ReturnType<typeof useLogOutMutation>;\r\nexport type LogOutMutationResult = ApolloReactCommon.MutationResult<LogOutMutation>;\r\nexport type LogOutMutationOptions = ApolloReactCommon.BaseMutationOptions<LogOutMutation, LogOutMutationVariables>;\r\nexport const MeDocument = gql`\r\n    query me {\r\n  me {\r\n    id\r\n    email\r\n    username\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\n\r\n/**\r\n * __useMeQuery__\r\n *\r\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\r\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties\r\n * you can use to render your UI.\r\n *\r\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\r\n *\r\n * @example\r\n * const { data, loading, error } = useMeQuery({\r\n *   variables: {\r\n *   },\r\n * });\r\n */\r\nexport function useMeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>) {\r\n        return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\r\n      }\r\nexport function useMeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\r\n          return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\r\n        }\r\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\r\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\r\nexport type MeQueryResult = ApolloReactCommon.QueryResult<MeQuery, MeQueryVariables>;\r\nexport const WhoPortDocument = gql`\r\n    query whoPort($handlePath: String!) {\r\n  whoPort(handlePath: $handlePath) {\r\n    id\r\n    avatar\r\n    background\r\n    handlePath\r\n    name {\r\n      firstName\r\n      lastName\r\n      nickName\r\n    }\r\n    social {\r\n      gitHup\r\n      faceBook\r\n      linkedIn\r\n      twitter\r\n    }\r\n    contact {\r\n      email\r\n      tel\r\n    }\r\n    works {\r\n      id\r\n      name\r\n      description\r\n      previewImage\r\n      viewDemo\r\n      viewGitHup\r\n      skillsUsed\r\n    }\r\n    about\r\n    resume\r\n    createdAt\r\n  }\r\n}\r\n    `;\r\n\r\n/**\r\n * __useWhoPortQuery__\r\n *\r\n * To run a query within a React component, call `useWhoPortQuery` and pass it any options that fit your needs.\r\n * When your component renders, `useWhoPortQuery` returns an object from Apollo Client that contains loading, error, and data properties\r\n * you can use to render your UI.\r\n *\r\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\r\n *\r\n * @example\r\n * const { data, loading, error } = useWhoPortQuery({\r\n *   variables: {\r\n *      handlePath: // value for 'handlePath'\r\n *   },\r\n * });\r\n */\r\nexport function useWhoPortQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<WhoPortQuery, WhoPortQueryVariables>) {\r\n        return ApolloReactHooks.useQuery<WhoPortQuery, WhoPortQueryVariables>(WhoPortDocument, baseOptions);\r\n      }\r\nexport function useWhoPortLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<WhoPortQuery, WhoPortQueryVariables>) {\r\n          return ApolloReactHooks.useLazyQuery<WhoPortQuery, WhoPortQueryVariables>(WhoPortDocument, baseOptions);\r\n        }\r\nexport type WhoPortQueryHookResult = ReturnType<typeof useWhoPortQuery>;\r\nexport type WhoPortLazyQueryHookResult = ReturnType<typeof useWhoPortLazyQuery>;\r\nexport type WhoPortQueryResult = ApolloReactCommon.QueryResult<WhoPortQuery, WhoPortQueryVariables>;","import { UserTypes, currentUser } from \"./user.interface\";\r\n\r\nexport interface UserState {\r\n  currentUser: currentUser | null;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n};\r\n\r\nexport default function (\r\n  state: UserState = INITIAL_STATE,\r\n  action: UserTypes\r\n): UserState {\r\n  switch (action.type) {\r\n    case \"SetUser\":\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { AlertTypes, alert } from \"./alert.interface\";\r\n\r\nexport interface AlertState {\r\n  alerts: Array<alert>;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  alerts: [],\r\n};\r\n\r\nexport default function (\r\n  state: AlertState = INITIAL_STATE,\r\n  action: AlertTypes\r\n): AlertState {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"SetAlert\":\r\n      return {\r\n        ...state,\r\n        alerts: [...state.alerts, payload],\r\n      };\r\n    case \"RemoveAlert\":\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter((alert) => alert.id !== payload.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { PortTypes } from \"./port.interface\";\r\nimport { Portfolio } from \"src/generated/graphql\";\r\n\r\nexport interface PortState {\r\n  currentPort: Portfolio | null;\r\n  ports: Array<Portfolio> | [];\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  currentPort: null,\r\n  ports: [],\r\n};\r\n\r\nexport default function (\r\n  state: PortState = INITIAL_STATE,\r\n  action: PortTypes\r\n): PortState {\r\n  switch (action.type) {\r\n    case \"SetPort\":\r\n      return {\r\n        ...state,\r\n        currentPort: action.payload,\r\n      };\r\n    case \"SetPorts\":\r\n      return {\r\n        ...state,\r\n        ports: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export interface LoadState {\r\n  isLoading: Boolean;\r\n}\r\n\r\ninterface LoaderTypes {\r\n  type: string;\r\n  payload: Boolean;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  isLoading: false,\r\n};\r\n\r\nexport default function (\r\n  state: LoadState = INITIAL_STATE,\r\n  action: LoaderTypes\r\n): LoadState {\r\n  switch (action.type) {\r\n    case \"SetLoading\":\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer, { UserState } from \"./User/user.reducer\";\r\nimport alertReducer, { AlertState } from \"./alert/alert.reducer\";\r\nimport portReducer, { PortState } from \"./Port/port.reducer\";\r\nimport loadReducer, { LoadState } from \"./loading/loading.reducer\";\r\n\r\nexport type MyReducers = {\r\n  userReducer: UserState;\r\n  alertReducer: AlertState;\r\n  portReducer: PortState;\r\n  loadReducer: LoadState;\r\n};\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n  alertReducer,\r\n  portReducer,\r\n  loadReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst middleWares: Array<any> = [reduxThunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleWares))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > * + *\": {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      backgroundColor: \"rgba(0,0,0,0.9)\",\r\n      alignItems: \"center\",\r\n      minHeight: \"100vh\",\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 9999,\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  isLoading: Boolean;\r\n};\r\n\r\nconst Container = document.createElement(\"div\");\r\nconst SpinnerRoot = document.querySelector(\"#spinner\");\r\n\r\nexport default function Spinner({\r\n  isLoading,\r\n}: Props): React.ReactElement | null {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    SpinnerRoot?.appendChild(Container);\r\n    return () => {\r\n      SpinnerRoot?.removeChild(Container);\r\n    };\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return ReactDOM.createPortal(\r\n      <div className={classes.root}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>,\r\n      Container\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  ReactNode,\r\n  SetStateAction,\r\n  Dispatch,\r\n} from \"react\";\r\n\r\ntype MyProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport type MyOffSet = {\r\n  landing: number | undefined;\r\n  project: number | undefined;\r\n  about: number | undefined;\r\n\r\n  resume: number | undefined;\r\n};\r\n\r\nexport type MyStoreOffset = {\r\n  offset: MyOffSet;\r\n  setOffSet: Dispatch<SetStateAction<MyOffSet>>;\r\n};\r\n\r\nexport const OffSetContext = createContext<MyStoreOffset | {}>({});\r\n\r\nexport const OffSetContextProvider = ({\r\n  children,\r\n}: MyProps): React.ReactElement => {\r\n  const [offset, setOffSet] = useState({\r\n    landing: 0,\r\n    project: 0,\r\n    about: 0,\r\n    resume: 0,\r\n  });\r\n\r\n  const store = {\r\n    offset,\r\n    setOffSet,\r\n  };\r\n\r\n  return (\r\n    <OffSetContext.Provider value={store}>{children}</OffSetContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > * + *\": {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      justifyContent: \"center\",\r\n      backgroundColor: \"rgba(0,0,0,0.9)\",\r\n      alignItems: \"center\",\r\n      minHeight: \"100vh\",\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 9999,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function FallBackSpinner() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { Button } from \"@material-ui/core/\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useLogOutMutation } from \"../generated/graphql\";\r\nimport { SetUser } from \"../redux/User/user.action\";\r\nimport FallBackSpinner from \"./FallBackSpinner\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      position: \"fixed\",\r\n      bottom: 0,\r\n      right: 0,\r\n      transition: \"all .5s ease-out\",\r\n    },\r\n  })\r\n);\r\nconst LogoutButton = ({\r\n  currentUser,\r\n  SetUser,\r\n}: Props): React.ReactElement | null => {\r\n  const classes = useStyles();\r\n  const [logOut, { loading }] = useLogOutMutation();\r\n\r\n  const handleLogout = async () => {\r\n    await logOut();\r\n    SetUser(null);\r\n  };\r\n\r\n  if (!currentUser) return null;\r\n  if (loading) return <FallBackSpinner />;\r\n  return (\r\n    <Button\r\n      onClick={handleLogout}\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      className={classes.button}\r\n      startIcon={<ExitToAppIcon />}\r\n    >\r\n      LogOut\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, { SetUser });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(LogoutButton);\r\n","import { currentUser, UserTypes } from \"./user.interface\";\r\n\r\nexport const SetUser = (user: currentUser | null): UserTypes => ({\r\n  type: \"SetUser\",\r\n  payload: user,\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from \"styled-components\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\n\r\nconst AlertContainer = styled.div`\r\n  position: fixed;\r\n  top: 70px;\r\n  right: 10px;\r\n  z-index: 99999999;\r\n`;\r\n\r\nconst AlertBox = styled(Alert)`\r\n  animation: slide 0.5s ease;\r\n  @keyframes slide {\r\n    from {\r\n      transform: translateY(200%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  alert: {\r\n    margin: 10,\r\n    minWidth: 280,\r\n    backgroundColor: \"white\",\r\n    maxWidth: 280,\r\n  },\r\n}));\r\n\r\nconst AlertMessage = ({ alerts }: Props) => {\r\n  const classes = useStyles();\r\n  if (alerts.length < 1) return null;\r\n  return (\r\n    <AlertContainer>\r\n      {alerts.map((alert) => (\r\n        <AlertBox\r\n          key={alert.id}\r\n          variant=\"outlined\"\r\n          severity={alert.type}\r\n          className={classes.alert}\r\n        >\r\n          <AlertTitle style={{ textTransform: \"capitalize\" }}>\r\n            {alert.type}\r\n          </AlertTitle>\r\n          <strong>{alert.message}</strong>\r\n        </AlertBox>\r\n      ))}\r\n    </AlertContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  alerts: state.alertReducer.alerts,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(AlertMessage);\r\n","import React, { Component, ErrorInfo } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  // deletes the constructor...\r\n  //constructor(props) {\r\n  // super(props);\r\n  // this.state = { hasError: false, redirect: false };\r\n  // }\r\n\r\n  public state = {\r\n    redirect: \"\",\r\n    hasError: false,\r\n  };\r\n  public static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n  // set the types for error  and info\r\n  public componentDidCatch(error: Error, info: ErrorInfo) {\r\n    console.error(\"ErrorBoundary caught an error\", error, info);\r\n  }\r\n  public componentDidUpdate() {\r\n    if (this.state.hasError) {\r\n      setTimeout(() => this.setState({ redirect: true }), 5000);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            minHeight: \"100vh\",\r\n            display: \"grid\",\r\n            placeItems: \"center\",\r\n          }}\r\n        >\r\n          <h3>\r\n            404 Page not found.{\" \"}\r\n            <Link to=\"/\" style={{ color: \"#f50057\", textDecoration: \"none\" }}>\r\n              Back home\r\n            </Link>\r\n          </h3>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst ButtonLogin = styled(Button)`\r\n  display: flex !important;\r\n  justify-content: space-between !important;\r\n  padding: 0px 5px !important;\r\n  width: 220px;\r\n  background-color: #4285f4 !important;\r\n  margin:auto;\r\n`;\r\n\r\nconst ButtonIconWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 1px;\r\n  margin-left: 1px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 2px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst ButtonIcon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nconst ButtonText = styled.p`\r\n  color: #fff;\r\n  font-size: 14px;\r\n  letter-spacing: 0.2px;\r\n`;\r\n\r\nconst AuthButton = (): React.ReactElement => {\r\n  return (\r\n    //http://portfolio-easy.herokuapp.com\r\n    <a href=\"http://portfolio-easy.herokuapp.com/auth/google\" style={{ textDecoration: \"none\" }}>\r\n      <ButtonLogin variant=\"contained\">\r\n        <ButtonIconWrapper>\r\n          <ButtonIcon src=\"/images/GoogleLogo.svg\" />\r\n        </ButtonIconWrapper>\r\n        <ButtonText>Login with Button</ButtonText>\r\n      </ButtonLogin>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LinkStyle = styled(Link)`\r\n  color: inherit;\r\n  text-decoration: none;\r\n`;\r\n\r\ntype Props = {\r\n  to: string;\r\n  children: React.ReactNode;\r\n};\r\nconst LinkNoneStyle = ({ children, to }: Props) => {\r\n  return <LinkStyle to={to}>{children}</LinkStyle>;\r\n};\r\n\r\nexport default LinkNoneStyle;\r\n","import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport AuthButton from \"../Components/AuthButton\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LinkNoneStyle from \"../Components/utilsComponents/LinkNoneStyle\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst HomeContainer = styled.div`\r\n  min-height: 100vh;\r\n  height: 100%;\r\n  background-image: url(\"/images/BackgroundHex.jpg\");\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst Home = ({ currentUser, ports }: Props): React.ReactElement => {\r\n  const history = useHistory();\r\n  const handleChange = (event: any, values: any) => {\r\n    history.push(`/${values.handlePath}`);\r\n  };\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <div\r\n        style={{ display: \"grid\", gridTemplateColumns: \"auto\", gridGap: 10 }}\r\n      >\r\n        {currentUser ? (\r\n          <div style={{ margin: \"auto\" }}>\r\n            <LinkNoneStyle to={`/${currentUser.username}`}>\r\n              <Button variant=\"contained\" color=\"secondary\" size=\"large\">\r\n                Go to my port\r\n              </Button>\r\n            </LinkNoneStyle>\r\n          </div>\r\n        ) : (\r\n          <AuthButton />\r\n        )}\r\n        <div\r\n          style={{\r\n            background: \"rgba(255,255,255,0.4)\",\r\n            padding: \"0 10px 20px 10px\",\r\n            borderRadius: 3,\r\n          }}\r\n        >\r\n          <h4 style={{ textAlign: \"center\" }}>Search Port</h4>\r\n          <Autocomplete\r\n            options={ports}\r\n            getOptionLabel={(option) => option.handlePath}\r\n            style={{ width: 250 }}\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Portfolio path name\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => console.log(e.target.value)}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n  ports: state.portReducer.ports,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(Home);\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Button, IconButton } from \"@material-ui/core/\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport LinkNoneStyle from \"../utilsComponents/LinkNoneStyle\";\r\nimport { MyOffSet } from \"../../Context/storeOffset\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core/\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      height: \"60px !important\",\r\n      maxHeight: \"60px !important\",\r\n    },\r\n    homeButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    menus: {\r\n      marginLeft: \"auto\",\r\n    },\r\n    menuButton: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n      fontSize: 16,\r\n      margin: \"0 5px\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"rgba(0,0,0,0.3)\",\r\n      },\r\n    },\r\n    menuIconButton: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"block\",\r\n      },\r\n      display: \"none\",\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nconst NavBarForMobile = styled.div`\r\n  position: fixed;\r\n  display: none;\r\n  top: 60px;\r\n  right: 0;\r\n  width: 40%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px;\r\n  transition: all 1s ease-out;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    display: block;\r\n    right: ${({ showNav }: styleProps) => (showNav ? \"0\" : \"-400px\")};\r\n  }\r\n`;\r\n\r\ntype styleProps = {\r\n  showNav: Boolean;\r\n};\r\n\r\ntype MyProps = {\r\n  offset: MyOffSet;\r\n};\r\n\r\nconst Navbar = ({ offset }: MyProps) => {\r\n  const classes = useStyles();\r\n  const [showNav, setShowNav] = React.useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"transparent\" className={classes.root}>\r\n      <Toolbar>\r\n        <div className={classes.homeButton}>\r\n          <LinkNoneStyle to=\"/\">\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\">\r\n              <HomeIcon />\r\n            </IconButton>\r\n          </LinkNoneStyle>\r\n        </div>\r\n\r\n        <div className={classes.menus}>\r\n          <Button\r\n            className={classes.menuButton}\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.landing, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            Home\r\n          </Button>\r\n          <Button\r\n            className={classes.menuButton}\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.project, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            My Projects\r\n          </Button>\r\n          <Button\r\n            className={classes.menuButton}\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.about, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            About\r\n          </Button>\r\n          <Button\r\n            className={classes.menuButton}\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.resume, behavior: \"smooth\" })\r\n            }\r\n          >\r\n            Resume\r\n          </Button>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.menuIconButton}\r\n            onClick={() => setShowNav(!showNav)}\r\n          >\r\n            {showNav ? <CloseIcon /> : <MenuIcon />}\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n      <NavBarForMobile showNav={showNav}>\r\n        <List component=\"nav\" style={{ color: \"#fff\" }}>\r\n          <ListItem\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.landing, behavior: \"smooth\" })\r\n            }\r\n            button\r\n          >\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n          <ListItem\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.project, behavior: \"smooth\" })\r\n            }\r\n            button\r\n          >\r\n            <ListItemText primary=\"Projects\" />\r\n          </ListItem>\r\n          <ListItem\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.about, behavior: \"smooth\" })\r\n            }\r\n            button\r\n          >\r\n            <ListItemText primary=\"About\" />\r\n          </ListItem>\r\n          <ListItem\r\n            onClick={() =>\r\n              window.scrollTo({ top: offset.resume, behavior: \"smooth\" })\r\n            }\r\n            button\r\n          >\r\n            <ListItemText primary=\"Resume\" />\r\n          </ListItem>\r\n        </List>\r\n      </NavBarForMobile>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Avatar, Typography, IconButton } from \"@material-ui/core/\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useWindowSize } from \"../../utils/useWindowSize\";\r\nimport LinkNoneStyle from \"../utilsComponents/LinkNoneStyle\";\r\nimport { Portfolio } from \"src/generated/graphql\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    avatar: {\r\n      width: theme.spacing(15),\r\n      height: theme.spacing(15),\r\n      border: \"2px solid white\",\r\n    },\r\n    name: {\r\n      margin: theme.spacing(2),\r\n      fontSize: 20,\r\n    },\r\n    email: { marginTop: theme.spacing(2), fontSize: 16 },\r\n    contact: { marginTop: theme.spacing(1), fontSize: 16 },\r\n  })\r\n);\r\n\r\ntype bgProps = {\r\n  background: string;\r\n};\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  padding: 60px 0 40px 0;\r\n  background: #ccc;\r\n  background-image: ${({ background }: bgProps) =>\r\n    background ? `url(${background})` : `url(\"/images/BackgroundHex.jpg\")`};\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  outline: none;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nconst LandingCard = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto;\r\n  padding: 40px 0;\r\n  grid-gap: 5px;\r\n  margin: 40px auto 0 auto;\r\n  width: 100%;\r\n  max-width: 650px;\r\n  border-radius: 3px;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nconst ItemDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SocialDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  animation: falling 0.9s ease-out;\r\n\r\n  @keyframes falling {\r\n    0% {\r\n      transform: translateY(-1000px) rotate(-150deg);\r\n    }\r\n    80% {\r\n      transform: translateY(30px);\r\n    }\r\n    90% {\r\n      transform: translateY(-10px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SocialButton = styled(IconButton)`\r\n  margin: 0 10px !important;\r\n  background-color: rgba(0, 0, 0, 0.7) !important;\r\n\r\n  &:disabled {\r\n    background-color: grey;\r\n  }\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    animation: spin 0.4s ease-out;\r\n    @keyframes spin {\r\n      from {\r\n        transform: rotate(-360deg) scale(0.97);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype Props = {\r\n  port: Portfolio;\r\n  allowEdit: Boolean;\r\n};\r\nconst Landing = ({ port, allowEdit }: Props): React.ReactElement => {\r\n  const classes = useStyles();\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const [offset, setOffset] = React.useState<any>(0);\r\n  const ref = useRef<HTMLHeadingElement>(null);\r\n  const windowWidth = useWindowSize().width;\r\n\r\n  React.useEffect(() => {\r\n    if (ref.current) {\r\n      setOffset(windowWidth - ref.current?.offsetLeft - 70);\r\n    }\r\n  }, [setOffset, windowWidth]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container background={port.background}>\r\n        <LandingCard ref={ref}>\r\n          {allowEdit && (\r\n            <div style={{ position: \"absolute\", top: 110, left: offset }}>\r\n              <LinkNoneStyle to={`${url}/edit_landing`}>\r\n                <IconButton style={{ backgroundColor: \"rgba(0,0,0,0.1)\" }}>\r\n                  <EditIcon color=\"primary\" />\r\n                </IconButton>\r\n              </LinkNoneStyle>\r\n            </div>\r\n          )}\r\n\r\n          <ItemDiv>\r\n            <Avatar\r\n              src={port.avatar ? port.avatar : \"/images/AvatarHex.jpg\"}\r\n              className={classes.avatar}\r\n            >\r\n              Avatar\r\n            </Avatar>\r\n          </ItemDiv>\r\n          <ItemDiv>\r\n            <Typography align=\"center\" className={classes.name}>\r\n              {port.name.firstName || \"?????\"} {port.name.lastName || \"?????\"}{\" \"}\r\n              <small>({port.name.nickName || \"??\"})</small>\r\n            </Typography>\r\n          </ItemDiv>\r\n          <SocialDiv>\r\n            <a\r\n              href={port.social.gitHup || \"#\"}\r\n              target={port.social.gitHup && \"_blank\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <SocialButton disabled={!port.social.gitHup}>\r\n                <GitHubIcon\r\n                  style={{\r\n                    color: !port.social.gitHup ? \"rgba(0,0,0,0.3)\" : \"white\",\r\n                  }}\r\n                />\r\n              </SocialButton>\r\n            </a>\r\n            <a\r\n              href={port.social.linkedIn || \"#\"}\r\n              target={port.social.linkedIn && \"_blank\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <SocialButton disabled={!port.social.linkedIn}>\r\n                <LinkedInIcon\r\n                  style={{\r\n                    color: !port.social.linkedIn\r\n                      ? \"rgba(0,0,0,0.3)\"\r\n                      : \"rgb(0, 127, 178)\",\r\n                  }}\r\n                />\r\n              </SocialButton>\r\n            </a>\r\n            <a\r\n              href={port.social.twitter || \"#\"}\r\n              target={port.social.twitter && \"_blank\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <SocialButton disabled={!port.social.twitter}>\r\n                <TwitterIcon\r\n                  style={{\r\n                    color: !port.social.twitter\r\n                      ? \"rgba(0,0,0,0.3)\"\r\n                      : \"rgb(0, 172, 237)\",\r\n                  }}\r\n                />\r\n              </SocialButton>\r\n            </a>\r\n            <a\r\n              href={port.social.faceBook || \"#\"}\r\n              target={port.social.faceBook && \"_blank\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <SocialButton disabled={!port.social.faceBook}>\r\n                <FacebookIcon\r\n                  color={port.social.faceBook ? \"primary\" : \"disabled\"}\r\n                />\r\n              </SocialButton>\r\n            </a>\r\n          </SocialDiv>\r\n          <ItemDiv>\r\n            <Typography align=\"center\" className={classes.email}>\r\n              Email: {port.contact.email || \"????\"}\r\n            </Typography>\r\n          </ItemDiv>\r\n          <ItemDiv>\r\n            <Typography align=\"center\" className={classes.contact}>\r\n              Tel: {port.contact.tel || \"????\"}\r\n            </Typography>\r\n          </ItemDiv>\r\n          \r\n        </LandingCard>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import { useState, useEffect } from \"react\";\r\n\r\ninterface windowsState {\r\n  width: number | 0;\r\n  height: number | 0;\r\n}\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState<windowsState>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core/\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport LinkNoneStyle from \"../utilsComponents/LinkNoneStyle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Works } from \"src/generated/graphql\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n    padding: 5,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  action: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"auto\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    textTransform: \"capitalize\",\r\n    backgroundColor: \" rgba(0,0,0,0.7)\",\r\n\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(0,0,0,0.4)\",\r\n    },\r\n  },\r\n});\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype Props = {\r\n  work: Works;\r\n  allowEdit: Boolean;\r\n};\r\n\r\nexport default function ProjectItem({ work, allowEdit }: Props) {\r\n  const classes = useStyles();\r\n  const { url } = useRouteMatch() as myMatch;\r\n\r\n  const id = work.id;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={work.previewImage || \"/images/BackgroundHex.jpg\"}\r\n      >\r\n        {allowEdit && (\r\n          <div style={{ textAlign: \"right\" }}>\r\n            <LinkNoneStyle to={`${url}/work/${id}`}>\r\n              <IconButton\r\n                size=\"small\"\r\n                style={{\r\n                  backgroundColor: \"rgba(255,255,255,0.3)\",\r\n                  marginRight: 3,\r\n                }}\r\n              >\r\n                <EditIcon color=\"primary\" />\r\n              </IconButton>\r\n            </LinkNoneStyle>\r\n            <LinkNoneStyle to={`${url}/work/${id}/delete`}>\r\n              <IconButton\r\n                size=\"small\"\r\n                style={{\r\n                  backgroundColor: \"rgba(255,255,255,0.3)\",\r\n                }}\r\n              >\r\n                <DeleteIcon color=\"secondary\" />\r\n              </IconButton>\r\n            </LinkNoneStyle>\r\n          </div>\r\n        )}\r\n\r\n        <CardActions className={classes.action}>\r\n          {work.viewDemo && (\r\n            <a\r\n              href={work.viewDemo}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ textDecoration: \"none\", width: \"100%\" }}\r\n            >\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                className={classes.button}\r\n              >\r\n                Live Demo\r\n              </Button>\r\n            </a>\r\n          )}\r\n          {work.viewGitHup && (\r\n            <a\r\n              href={work.viewGitHup}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ textDecoration: \"none\", width: \"100%\" }}\r\n            >\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                className={classes.button}\r\n              >\r\n                Githup\r\n              </Button>\r\n            </a>\r\n          )}\r\n        </CardActions>\r\n      </CardMedia>\r\n      <CardContent\r\n        style={{ wordBreak: \"break-word\", height: \"100%\", padding: 10 }}\r\n      >\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {work.name || \"???\"}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          {work.description || \"?????\"}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          style={{ marginTop: 10 }}\r\n        >\r\n          Skill used:\r\n        </Typography>\r\n        {work.skillsUsed.length > 0 && (\r\n          <div\r\n            style={{\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: 3,\r\n            }}\r\n          >\r\n            {work.skillsUsed.map((s, i) => (\r\n              <Typography\r\n                key={i}\r\n                style={{\r\n                  fontSize: 16,\r\n                  margin: 5,\r\n                  border: \"1px solid rgba(0,0,0,0.5)\",\r\n                  borderRadius: 3,\r\n                }}\r\n                variant=\"body2\"\r\n                color=\"primary\"\r\n                component=\"p\"\r\n                align=\"center\"\r\n              >\r\n                {s}\r\n              </Typography>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Typography, CardActionArea, Card } from \"@material-ui/core/\";\r\nimport ProjectItem from \"./ProjectItem\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LinkNoneStyle from \"../utilsComponents/LinkNoneStyle\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Works } from \"src/generated/graphql\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 10px;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\n\r\nconst ProjectDiv = styled.div`\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  margin: auto;\r\n  width: 100%;\r\n  max-width: 900px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype Props = {\r\n  works: Works[];\r\n  allowEdit: Boolean;\r\n};\r\n\r\nconst Projects = ({ works, allowEdit }: Props): React.ReactElement => {\r\n  const { url } = useRouteMatch() as myMatch;\r\n  return (\r\n    <Container>\r\n      <Typography\r\n        align=\"center\"\r\n        variant=\"h6\"\r\n        component=\"h4\"\r\n        style={{ marginBottom: 20 }}\r\n      >\r\n        My Projects\r\n      </Typography>\r\n      <ProjectDiv>\r\n        {works.length > 0\r\n          ? works.map((w) => (\r\n              <ProjectItem key={w.id} work={w} allowEdit={allowEdit} />\r\n            ))\r\n          : null}\r\n        {allowEdit && (\r\n          <LinkNoneStyle to={`${url}/work/create`}>\r\n            <Card style={{ maxWidth: 345, height: \"100%\" }}>\r\n              <CardActionArea\r\n                style={{\r\n                  height: \"100%\",\r\n                  display: \"grid\",\r\n                  placeItems: \"center\",\r\n                }}\r\n              >\r\n                <AddIcon style={{ fontSize: 100 }} color=\"primary\" />\r\n              </CardActionArea>\r\n            </Card>\r\n          </LinkNoneStyle>\r\n        )}\r\n      </ProjectDiv>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { AlertTypes, alert, SeverityTypes } from \"./alert.interface\";\r\nimport { AlertState } from \"./alert.reducer\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { Action } from \"redux\";\r\n\r\ninterface SetParams {\r\n  message: string;\r\n  type: SeverityTypes;\r\n}\r\n\r\ntype MyThunkDispatch = ThunkDispatch<AlertState, AlertTypes, Action>;\r\n\r\nexport const SetAlert = ({ message, type }: SetParams) => (\r\n  dispatch: MyThunkDispatch\r\n) => {\r\n  const id = uuidv4();\r\n  const payload = { id, message, type };\r\n  dispatch({\r\n    type: \"SetAlert\",\r\n    payload,\r\n  });\r\n\r\n  setTimeout(() => dispatch(RemoveAlert(payload)), 3000);\r\n};\r\n\r\nconst RemoveAlert = (payload: alert): AlertTypes => ({\r\n  type: \"RemoveAlert\",\r\n  payload: payload,\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Typography, IconButton, TextField } from \"@material-ui/core/\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport { useEditAboutMutation } from \"../../generated/graphql\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { SetAlert } from \"../../redux/alert/alert.action\";\r\nimport store from \"../../redux/store\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 0 50px 0;\r\n  text-align: center;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\n\r\nconst AboutDiv = styled.div`\r\n  display: inline-block;\r\n  text-align: center;\r\n  max-width: 900px;\r\n  width: 100%;\r\n  word-break: break-word;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nconst InputEditAbout = styled(TextField)`\r\n  width: 100%;\r\n  animation: expand 0.5s ease-out;\r\n  @keyframes expand {\r\n    from {\r\n      transform: scaleX(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst About = ({ about, SetAlert, allowEdit }: Props): React.ReactElement => {\r\n  const [edit, setEdit] = React.useState(false);\r\n  const [aboutMe, setAboutMe] = React.useState(about);\r\n  const [editAbout] = useEditAboutMutation();\r\n\r\n  const handleChange = (e: any) => {\r\n    setAboutMe(e.target.value);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    if (edit) {\r\n      store.dispatch({ type: \"SetLoading\", payload: true });\r\n      const { data } = await editAbout({ variables: { about: aboutMe } });\r\n      if (data) {\r\n        SetAlert({\r\n          type: \"success\",\r\n          message: \"Edited description about you successfully.\",\r\n        });\r\n      }\r\n      store.dispatch({ type: \"SetLoading\", payload: false });\r\n    }\r\n    setEdit(!edit);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"h6\"\r\n          component=\"h4\"\r\n          style={{ marginBottom: 20 }}\r\n        >\r\n          About\r\n        </Typography>\r\n        <AboutDiv>\r\n          {allowEdit && (\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <IconButton onClick={handleEdit}>\r\n                {edit ? (\r\n                  <DoneIcon color=\"primary\" />\r\n                ) : (\r\n                  <EditIcon color=\"primary\" />\r\n                )}\r\n              </IconButton>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ padding: allowEdit ? \"0 30px 30px 30px\" : \"30px\" }}>\r\n            {edit && allowEdit ? (\r\n              <InputEditAbout\r\n                multiline\r\n                rowsMax={10}\r\n                variant=\"outlined\"\r\n                label=\"About\"\r\n                defaultValue={about}\r\n                onChange={handleChange}\r\n              />\r\n            ) : (\r\n              <Typography>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                {about ? about : \"Description about your self.\"}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </AboutDiv>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ntype OwnProps = {\r\n  about: string;\r\n  allowEdit: Boolean;\r\n};\r\n\r\nconst mapStateToProps = (_: any, ownProps: OwnProps) => {\r\n  return {\r\n    about: ownProps.about,\r\n    allowEdit: ownProps.allowEdit,\r\n  };\r\n};\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(About);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Typography, IconButton, TextField } from \"@material-ui/core/\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport { useEditResumeMutation } from \"../../generated/graphql\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { SetAlert } from \"../../redux/alert/alert.action\";\r\nimport { validURL } from \"src/utils/validURL\";\r\nimport store from \"../../redux/store\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 0 50px 0;\r\n  border-bottom: 2px solid #ccc;\r\n`;\r\n\r\nconst ResumeDiv = styled.div`\r\n  margin: auto;\r\n  max-width: 900px;\r\n  word-break: break-all;\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst ResumeFrame = styled.iframe`\r\n  width: 100%;\r\n  height: 600px;\r\n  border: 2px solid #ccc;\r\n  outline: none;\r\n`;\r\n\r\nconst InputEditResume = styled(TextField)`\r\n  max-width: 400px;\r\n  width: 100%;\r\n  animation: expand 0.5s ease-out;\r\n  @keyframes expand {\r\n    from {\r\n      transform: scaleX(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Resume = ({ resume, SetAlert, allowEdit }: Props): React.ReactElement => {\r\n  const [edit, setEdit] = React.useState(false);\r\n  const [myResume, setMyResume] = React.useState(resume);\r\n  const [error, setError] = React.useState(false);\r\n  const [editResume] = useEditResumeMutation();\r\n\r\n  const handleChange = (e: any) => {\r\n    setMyResume(e.target.value);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    setError(false);\r\n    if (edit) {\r\n      if (!validURL(myResume) && myResume) {\r\n        setError(true);\r\n        return;\r\n      }\r\n      store.dispatch({ type: \"SetLoading\", payload: true });\r\n      const { data } = await editResume({ variables: { resume: myResume } });\r\n      if (data) {\r\n        SetAlert({ type: \"success\", message: \"Edited resume successfully.\" });\r\n      }\r\n      store.dispatch({ type: \"SetLoading\", payload: false });\r\n    }\r\n    setEdit(!edit);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography\r\n        align=\"center\"\r\n        variant=\"h6\"\r\n        component=\"h4\"\r\n        style={{ marginBottom: 20 }}\r\n      >\r\n        Resume\r\n      </Typography>\r\n      <ResumeDiv>\r\n        {allowEdit && (\r\n          <div style={{ textAlign: \"right\", marginBottom: 20 }}>\r\n            {error && (\r\n              <p\r\n                style={{\r\n                  margin: \"0 0 5px 0\",\r\n                  padding: 0,\r\n                  color: \"red\",\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                This field must be url.\r\n              </p>\r\n            )}\r\n            {edit && (\r\n              <InputEditResume\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"Resume URL\"\r\n                style={{ margin: \"5px\" }}\r\n                defaultValue={resume}\r\n                onChange={handleChange}\r\n                error={error}\r\n              />\r\n            )}\r\n            <IconButton color=\"primary\" onClick={handleEdit}>\r\n              {edit ? (\r\n                <DoneIcon color=\"primary\" />\r\n              ) : (\r\n                <EditIcon color=\"primary\" />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n\r\n        <ResumeFrame src={resume} title=\"Resume\"></ResumeFrame>\r\n      </ResumeDiv>\r\n    </Container>\r\n  );\r\n};\r\n\r\ntype OwnProps = {\r\n  resume: string;\r\n  allowEdit: Boolean;\r\n};\r\nconst mapStateToProps = (_: any, ownProps: OwnProps) => {\r\n  return {\r\n    resume: ownProps.resume,\r\n    allowEdit: ownProps.allowEdit,\r\n  };\r\n};\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(Resume);\r\n","export function validURL(str: string) {\r\n  var pattern = new RegExp(\r\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n    \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n    \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n    \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n    \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n    \"i\"\r\n  ); // fragment locator\r\n  return !!pattern.test(str);\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport Landing from \"./Landing\";\r\nimport Projects from \"./Projects\";\r\nimport About from \"./About\";\r\nimport Resume from \"./Resume\";\r\nimport { OffSetContext, MyStoreOffset } from \"../../Context/storeOffset\";\r\nimport { ConnectedProps, connect } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { MyReducers } from \"src/redux/rootReducer\";\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\nconst Portfolio = ({ currentPort, currentUser }: Props) => {\r\n  const { setOffSet } = useContext(OffSetContext) as MyStoreOffset;\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const [allowEdit, setAllowEdit] = React.useState(false);\r\n  const userId = url.split(\"/\")[2];\r\n  const LandingRef = useRef<HTMLHeadingElement>(null);\r\n  const ProjectRef = useRef<HTMLHeadingElement>(null);\r\n  const AboutRef = useRef<HTMLHeadingElement>(null);\r\n  const ResumeRef = useRef<HTMLHeadingElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser && currentUser.username === userId) {\r\n      setAllowEdit(true);\r\n    }\r\n    setOffSet({\r\n      landing: LandingRef.current?.offsetTop,\r\n      project: ProjectRef.current?.offsetTop,\r\n      about: AboutRef.current?.offsetTop,\r\n      resume: ResumeRef.current?.offsetTop,\r\n    });\r\n  }, [setOffSet, currentPort, setAllowEdit, currentUser, userId]);\r\n\r\n  return (\r\n    currentPort && (\r\n      <React.Fragment>\r\n        <div ref={LandingRef}>\r\n          <Landing port={currentPort} allowEdit={allowEdit} />\r\n        </div>\r\n        <div ref={ProjectRef}>\r\n          <Projects works={currentPort?.works} allowEdit={allowEdit} />\r\n        </div>\r\n        <div ref={AboutRef}>\r\n          <About about={currentPort?.about} allowEdit={allowEdit} />\r\n        </div>\r\n        <div ref={ResumeRef}>\r\n          <Resume resume={currentPort.resume} allowEdit={allowEdit} />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentPort: state.portReducer.currentPort,\r\n  currentUser: state.userReducer.currentUser,\r\n});\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(Portfolio);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\ntype Props = {\r\n  onDismiss: () => void;\r\n  title: string;\r\n  content: React.ReactElement;\r\n  actions: React.ReactElement;\r\n  isLoading?: Boolean;\r\n};\r\n\r\nconst Container1 = document.createElement(\"div\");\r\nconst ModalRoot = document.querySelector(\"#modal\");\r\n\r\nconst OutSide = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 999;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n  max-width: 400px;\r\n  background-color: white;\r\n  padding: 20px 60px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default function Modal({\r\n  onDismiss,\r\n  title,\r\n  content,\r\n  actions,\r\n  isLoading,\r\n}: Props) {\r\n  React.useEffect(() => {\r\n    ModalRoot?.appendChild(Container1);\r\n\r\n    return () => {\r\n      ModalRoot?.removeChild(Container1);\r\n    };\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <OutSide onClick={onDismiss}>\r\n      <ModalBody onClick={(e) => e.stopPropagation()}>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h5\"\r\n          component=\"h2\"\r\n          style={{ margin: \"10px 0\" }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <div style={{ margin: \"15px 0\" }}>{content}</div>\r\n        <div>{actions}</div>\r\n      </ModalBody>\r\n      {isLoading && (\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0,0,0,0.9)\",\r\n            placeItems: \"center\",\r\n            minHeight: \"100vh\",\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 9999,\r\n          }}\r\n        >\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      )}\r\n    </OutSide>,\r\n    Container1\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { LandingInput } from \"../../generated/graphql\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\n\r\nconst LandingSchema = yup.object().shape({\r\n  handlePath: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"This field is required.\")\r\n    .min(5, \"This field must be less then 5 chars.\")\r\n    .max(30),\r\n  email: yup.string().email(\"Invalid email.\"),\r\n  fitsName: yup.string().trim().max(20),\r\n  lastName: yup.string().trim().max(20),\r\n  nickName: yup.string().trim().max(20),\r\n  tel: yup.string().trim().max(20),\r\n  avatar: yup.string().url(\"This field must be url.\"),\r\n  background: yup.string().url(\"This field must be url.\"),\r\n  gitHup: yup.string().url(\"This field must be url.\"),\r\n  faceBook: yup.string().url(\"This field must be url.\"),\r\n  twitter: yup.string().url(\"This field must be url.\"),\r\n  linkedIn: yup.string().url(\"This field must be url.\"),\r\n});\r\n\r\ntype Props = {\r\n  currentPort: any;\r\n  onSubmit: (values: LandingInput) => void;\r\n};\r\nconst EditLandingForm = ({\r\n  currentPort,\r\n  onSubmit,\r\n}: Props): React.ReactElement => {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(LandingSchema),\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit<LandingInput>(onSubmit)}>\r\n      <TextField\r\n        name=\"handlePath\"\r\n        label=\"handlePath\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.handlePath}\r\n        inputRef={register}\r\n        error={!!errors.handlePath}\r\n        autoComplete=\"off\"\r\n      />\r\n      {errors.handlePath && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.handlePath.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"avatar\"\r\n        label=\"Avatar URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.avatar}\r\n        inputRef={register}\r\n        error={!!errors.avatar}\r\n        autoComplete=\"off\"\r\n      />\r\n      {errors.avatar && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.avatar.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"background\"\r\n        label=\"Background URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.background}\r\n        inputRef={register}\r\n        error={!!errors.background}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.background && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.background.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"firstName\"\r\n        label=\"FirstName\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.name.firstName}\r\n        inputRef={register}\r\n        error={!!errors.firstName}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.firstName && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.firstName.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"lastName\"\r\n        label=\"LastName\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.name.lastName}\r\n        inputRef={register}\r\n        error={!!errors.lastName}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.lastName && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.lastName.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"nickName\"\r\n        label=\"NickName\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.name.nickName}\r\n        inputRef={register}\r\n        error={!!errors.nickName}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.nickName && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.nickName.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"gitHup\"\r\n        label=\"GitHup URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.social.gitHup}\r\n        inputRef={register}\r\n        error={!!errors.gitHup}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.gitHup && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.gitHup.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"linkedIn\"\r\n        label=\"LinkedIn URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.social.linkedIn}\r\n        inputRef={register}\r\n        error={!!errors.linkedIn}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.linkedIn && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.linkedIn.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"twitter\"\r\n        label=\"Twitter URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.social.twitter}\r\n        inputRef={register}\r\n        error={!!errors.twitter}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.twitter && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.twitter.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"faceBook\"\r\n        label=\"Facebook URL\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.social.faceBook}\r\n        inputRef={register}\r\n        error={!!errors.faceBook}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.faceBook && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.faceBook.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.contact.email}\r\n        inputRef={register}\r\n        error={!!errors.email}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.email && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.email.message}\r\n        </p>\r\n      )}\r\n      <TextField\r\n        name=\"tel\"\r\n        label=\"Telephone\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", margin: \"5px 0\" }}\r\n        defaultValue={currentPort?.contact.tel}\r\n        inputRef={register}\r\n        error={!!errors.tel}\r\n        autoComplete=\"off\"\r\n      />{\" \"}\r\n      {errors.tel && (\r\n        <p\r\n          style={{\r\n            margin: \"0 0 5px 0\",\r\n            padding: 0,\r\n            color: \"red\",\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          {errors.tel.message}\r\n        </p>\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        style={{ width: \"100%\", marginTop: 10 }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditLandingForm;\r\n","import React from \"react\";\r\nimport Modal from \"../portal/Modal\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { ConnectedProps, connect } from \"react-redux\";\r\nimport EditLandingForm from \"../Components/editComponents/EditLandingForm\";\r\nimport { useEditLandingMutation, LandingInput } from \"../generated/graphql\";\r\nimport { SetAlert } from \"../redux/alert/alert.action\";\r\nimport store from \"../redux/store\";\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\nconst EditLanding = ({\r\n  currentPort,\r\n  currentUser,\r\n  SetAlert,\r\n}: Props): React.ReactElement => {\r\n  const { url } = useRouteMatch() as myMatch;\r\n\r\n  const history = useHistory();\r\n  const userId = url.split(\"/\")[2];\r\n\r\n  const [editLanding] = useEditLandingMutation();\r\n  const onSubmit = async (values: LandingInput) => {\r\n    store.dispatch({ type: \"SetLoading\", payload: true });\r\n    try {\r\n      const { data } = await editLanding({\r\n        variables: { data: values },\r\n      });\r\n      if (data) {\r\n        SetAlert({ message: \"Edited landing successfully.\", type: \"success\" });\r\n      }\r\n    } catch (error) {\r\n      SetAlert({ message: error.message, type: \"error\" });\r\n    }\r\n    store.dispatch({ type: \"SetLoading\", payload: false });\r\n    history.push(url.substring(0, url.length - 13));\r\n  };\r\n\r\n  if (userId !== currentUser?.username || !currentUser || !currentPort)\r\n    history.push(url.substring(0, url.length - 13));\r\n  return (\r\n    <Modal\r\n      onDismiss={() => history.push(url.substring(0, url.length - 13))}\r\n      title=\"Edit Landing\"\r\n      content={\r\n        <EditLandingForm currentPort={currentPort} onSubmit={onSubmit} />\r\n      }\r\n      actions={<div></div>}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n  currentPort: state.portReducer.currentPort,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(EditLanding);\r\n","import React from \"react\";\r\nimport { TextField, Typography, IconButton, Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport styled from \"styled-components\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { MyReducers } from \"../../redux/rootReducer\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useEditWorkMutation } from \"../../generated/graphql\";\r\nimport { SetAlert } from \"../../redux/alert/alert.action\";\r\nimport store from \"../../redux/store\";\r\n\r\nconst SkillUsedContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1px 5px;\r\n  border-radius: 3px;\r\n  border: 1px solid #ccc;\r\n  padding: 5px;\r\n`;\r\n\r\nconst SkillUsedDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst WorkSchema = yup.object().shape({\r\n  name: yup.string().max(20),\r\n  description: yup.string().max(100),\r\n  previewImage: yup.string().url(\"This field must be url.\"),\r\n  viewDemo: yup.string().url(\"This field must be url.\"),\r\n  viewGitHup: yup.string().url(\"This field must be url.\"),\r\n});\r\n\r\nconst EditWorkForm = ({ work, SetAlert, back }: Props): React.ReactElement => {\r\n  const [skills, setSkills] = React.useState(work?.skillsUsed || []);\r\n  const [errSkill, setErrSkill] = React.useState(false);\r\n  const [skill, setSkill] = React.useState(\"\");\r\n  const [addSkill, setAddSkill] = React.useState(false);\r\n  const [editWork] = useEditWorkMutation();\r\n\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(WorkSchema),\r\n  });\r\n\r\n  const handleAddSkill = () => {\r\n    if (!skill) {\r\n      setAddSkill(false);\r\n      return;\r\n    }\r\n    if (skills?.find((s) => s === skill)) {\r\n      setErrSkill(true);\r\n    } else {\r\n      setErrSkill(false);\r\n      skills?.push(skill);\r\n      setSkill(\"\");\r\n      setAddSkill(false);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (values: any) => {\r\n    store.dispatch({ type: \"SetLoading\", payload: true });\r\n    const { data } = await editWork({\r\n      variables: {\r\n        work: { ...values, id: work?.id || \"create\", skillsUsed: [...skills] },\r\n      },\r\n    });\r\n    if (data) {\r\n      SetAlert({ message: \"Edited work successfully.\", type: \"success\" });\r\n    }\r\n    store.dispatch({ type: \"SetLoading\", payload: false });\r\n    back();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={handleSubmit<any>(onSubmit)}>\r\n        <TextField\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.name}\r\n          inputRef={register}\r\n          error={!!errors.name}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.name && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.name.message}\r\n          </p>\r\n        )}\r\n        <TextField\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.description}\r\n          inputRef={register}\r\n          error={!!errors.description}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.description && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.description.message}\r\n          </p>\r\n        )}\r\n        <TextField\r\n          name=\"previewImage\"\r\n          label=\"PreviewImage URL\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.previewImage}\r\n          inputRef={register}\r\n          error={!!errors.previewImage}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.previewImage && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.previewImage.message}\r\n          </p>\r\n        )}\r\n        <TextField\r\n          name=\"viewDemo\"\r\n          label=\"Demo URL\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.viewDemo}\r\n          inputRef={register}\r\n          error={!!errors.viewDemo}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.viewDemo && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.viewDemo.message}\r\n          </p>\r\n        )}\r\n        <TextField\r\n          name=\"viewGitHup\"\r\n          label=\"GitHup URL\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", margin: \"5px 0\" }}\r\n          defaultValue={work?.viewGitHup}\r\n          inputRef={register}\r\n          error={!!errors.viewGitHup}\r\n          autoComplete=\"off\"\r\n        />{\" \"}\r\n        {errors.viewGitHup && (\r\n          <p\r\n            style={{\r\n              margin: \"0 0 5px 0\",\r\n              padding: 0,\r\n              color: \"red\",\r\n              fontSize: 14,\r\n            }}\r\n          >\r\n            {errors.viewGitHup.message}\r\n          </p>\r\n        )}\r\n        <div style={{ marginTop: 10 }}>\r\n          <Typography>\r\n            Skill used:\r\n            <IconButton onClick={() => setAddSkill(!addSkill)}>\r\n              {addSkill ? (\r\n                <CancelIcon color=\"secondary\" />\r\n              ) : (\r\n                <AddIcon color=\"primary\" />\r\n              )}\r\n            </IconButton>\r\n          </Typography>\r\n\r\n          {skills && skills.length > 0 && (\r\n            <SkillUsedContainer>\r\n              {skills.map((skill, index) => (\r\n                <SkillUsedDiv key={index}>\r\n                  <Typography>{skill}</Typography>\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      const newSkills = skills.filter((s) => s !== skill);\r\n                      setSkills(newSkills);\r\n                    }}\r\n                  >\r\n                    <DeleteIcon color=\"secondary\" />\r\n                  </IconButton>\r\n                </SkillUsedDiv>\r\n              ))}\r\n            </SkillUsedContainer>\r\n          )}\r\n\r\n          {addSkill && (\r\n            <React.Fragment>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <TextField\r\n                  label=\"Write skill...\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  style={{ width: \"100%\", margin: \"5px 0\" }}\r\n                  onChange={(e) => setSkill(e.target.value)}\r\n                  value={skill}\r\n                  autoComplete=\"off\"\r\n                  required\r\n                />\r\n                <IconButton onClick={handleAddSkill}>\r\n                  <DoneIcon color=\"primary\" />\r\n                </IconButton>\r\n              </div>\r\n              {errSkill && (\r\n                <p\r\n                  style={{\r\n                    margin: \"0 0 5px 0\",\r\n                    padding: 0,\r\n                    color: \"red\",\r\n                    fontSize: 14,\r\n                  }}\r\n                >\r\n                  You have already added this skill.\r\n                </p>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          style={{ width: \"100%\", marginTop: 10 }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ntype ownProps = {\r\n  workId: string;\r\n  back: () => void;\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers, ownProps: ownProps) => {\r\n  return {\r\n    work: state.portReducer.currentPort?.works.find(\r\n      (w) => w.id === ownProps.workId\r\n    ),\r\n    back: ownProps.back,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(EditWorkForm);\r\n","import React from \"react\";\r\nimport Modal from \"../portal/Modal\";\r\nimport { useRouteMatch, useHistory, useParams } from \"react-router-dom\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport EditWorkForm from \"../Components/editComponents/EditWorkForm\";\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype myParams = {\r\n  id: string;\r\n};\r\n\r\nconst EditWork = ({ currentPort, currentUser }: Props): React.ReactElement => {\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const { id } = useParams() as myParams;\r\n  const history = useHistory();\r\n  const title = id.toLowerCase() === \"create\" ? \"Create Work\" : \"Edit Work\";\r\n  const userId = url.split(\"/\")[2];\r\n\r\n  const handleDismiss = () => {\r\n    if (id.toLowerCase() === \"create\") {\r\n      history.push(url.substring(0, url.length - (6 + id.length)));\r\n    } else {\r\n      history.push(url.substring(0, url.length - (6 + id.length)));\r\n    }\r\n  };\r\n\r\n  if (userId !== currentUser?.username || !currentUser || !currentPort)\r\n    history.push(url.substring(0, url.length - (6 + id.length)));\r\n  return (\r\n    <Modal\r\n      onDismiss={handleDismiss}\r\n      title={title}\r\n      content={\r\n        <EditWorkForm\r\n          workId={id}\r\n          back={() =>\r\n            history.push(url.substring(0, url.length - (6 + id.length)))\r\n          }\r\n        />\r\n      }\r\n      actions={<div></div>}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => {\r\n  return {\r\n    currentUser: state.userReducer.currentUser,\r\n    currentPort: state.portReducer.currentPort,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(EditWork);\r\n","import React from \"react\";\r\nimport Modal from \"../portal/Modal\";\r\nimport { useRouteMatch, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDeleteWorkMutation } from \"../generated/graphql\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { SetAlert } from \"../redux/alert/alert.action\";\r\nimport store from \"../redux/store\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype myParams = {\r\n  id: string;\r\n};\r\n\r\nconst DeleteWork = ({\r\n  currentPort,\r\n  currentUser,\r\n  SetAlert,\r\n}: Props): React.ReactElement | null => {\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const { id } = useParams() as myParams;\r\n  const userId = url.split(\"/\")[2];\r\n  const history = useHistory();\r\n  const [deleteWork] = useDeleteWorkMutation();\r\n\r\n  const handleDelete = async () => {\r\n    store.dispatch({ type: \"SetLoading\", payload: true });\r\n    const { data } = await deleteWork({ variables: { workId: id } });\r\n    if (data) {\r\n      SetAlert({ type: \"success\", message: \"Deleted work successfully.\" });\r\n    }\r\n    store.dispatch({ type: \"SetLoading\", payload: false });\r\n    history.push(url.substring(0, url.length - (13 + id.length)));\r\n  };\r\n\r\n  if (userId !== currentUser?.username || !currentUser || !currentPort)\r\n    history.push(url.substring(0, url.length - (13 + id.length)));\r\n  return (\r\n    <Modal\r\n      onDismiss={() =>\r\n        history.push(url.substring(0, url.length - (13 + id.length)))\r\n      }\r\n      title=\"Delete Work\"\r\n      content={<div>Are you sure to delete this work. </div>}\r\n      actions={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleDelete}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            color=\"default\"\r\n            size=\"small\"\r\n            onClick={() =>\r\n              history.push(url.substring(0, url.length - (13 + id.length)))\r\n            }\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers) => ({\r\n  currentUser: state.userReducer.currentUser,\r\n  currentPort: state.portReducer.currentPort,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, { SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(DeleteWork);\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"../Components/portComponents/Navbar\";\r\nimport { Route, useRouteMatch, Redirect } from \"react-router-dom\";\r\nimport Portfolio from \"../Components/portComponents/Portfolio\";\r\nimport { OffSetContext, MyStoreOffset } from \"../Context/storeOffset\";\r\nimport EditLanding from \"./EditLanding\";\r\nimport EditWork from \"./EditWork\";\r\nimport DeleteWork from \"./DeleteWork\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Spinner from \"../portal/Spinner\";\r\nimport { MyReducers } from \"../redux/rootReducer\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { SetPort } from \"../redux/Port/port.action\";\r\nimport store from \"../redux/store\";\r\nimport { SetAlert } from \"../redux/alert/alert.action\";\r\nimport { useWhoPortQuery } from \"../generated/graphql\";\r\n\r\nconst PortContainer = styled.div`\r\n  background-color: #e5e5e5;\r\n  width: 100%;\r\n`;\r\n\r\ntype myMatch = {\r\n  url: string;\r\n};\r\n\r\ntype myParams = {\r\n  id: string;\r\n};\r\n\r\nconst PortfolioPage = ({ SetPort, SetAlert, loader }: Props) => {\r\n  const { offset } = useContext(OffSetContext) as MyStoreOffset;\r\n  const { url } = useRouteMatch() as myMatch;\r\n  const { id } = useParams() as myParams;\r\n  const { data, error, loading } = useWhoPortQuery({\r\n    variables: { handlePath: id },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    store.dispatch({ type: \"SetLoading\", payload: loading });\r\n\r\n    if (data) {\r\n      SetPort(data.whoPort);\r\n    }\r\n\r\n    return () => {\r\n      SetPort(null);\r\n    };\r\n  }, [data, SetPort, loading]);\r\n\r\n  if (error) {\r\n    SetAlert({ type: \"info\", message: \"Portfolio not found.\" });\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <PortContainer>\r\n      <Navbar offset={offset} />\r\n      <Route path={`${url}`} component={Portfolio} />\r\n      <Route exact path={`${url}/edit_landing`} component={EditLanding} />\r\n      <Route exact path={`${url}/work/:id`} component={EditWork} />\r\n      <Route exact path={`${url}/work/:id/delete`} component={DeleteWork} />\r\n      <Spinner isLoading={loader} />\r\n    </PortContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: MyReducers, ownProps: any) => {\r\n  return {\r\n    loader: state.loadReducer.isLoading,\r\n    currentPort: state.portReducer.currentPort,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { SetPort, SetAlert });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nexport default connector(PortfolioPage);\r\n","import { PortTypes } from \"./port.interface\";\r\n\r\nexport const SetPort = (port: any): PortTypes => ({\r\n  type: \"SetPort\",\r\n  payload: port,\r\n});\r\n\r\nexport const SetPorts = (ports: any): PortTypes => ({\r\n  type: \"SetPorts\",\r\n  payload: ports,\r\n});\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport { useMeQuery } from \"./generated/graphql\";\r\nimport store from \"./redux/store\";\r\nimport Spinner from \"./portal/Spinner\";\r\nimport { OffSetContextProvider } from \"./Context/storeOffset\";\r\nimport LogoutButton from \"./Components/LogoutButton\";\r\nimport AlertMessage from \"./Components/AlertMessage\";\r\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\r\nimport HomePage from \"./Container/HomePage\";\r\nimport PortfolioPage from \"./Container/PortfolioPage\";\r\nimport axios from \"axios\";\r\n\r\naxios\r\n  .get(\"/api/portfolios\")\r\n  .then((res) => store.dispatch({ type: \"SetPorts\", payload: res.data }))\r\n  .catch((err) => console.error(err));\r\n\r\nconst App = (): React.ReactElement => {\r\n  const { data, loading } = useMeQuery();\r\n\r\n  React.useEffect(() => {\r\n    if (data) {\r\n      store.dispatch({ type: \"SetUser\", payload: data.me });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <OffSetContextProvider>\r\n      <AlertMessage />\r\n      <LogoutButton />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <ErrorBoundary>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/:id\" component={PortfolioPage} />{\" \"}\r\n          </ErrorBoundary>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <Spinner isLoading={loading} />\r\n    </OffSetContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./redux/store\";\r\nimport ApolloClient from \"apollo-boost\";\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"/graphql\",\r\n  credentials: \"include\",\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client as any}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </ApolloProvider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}